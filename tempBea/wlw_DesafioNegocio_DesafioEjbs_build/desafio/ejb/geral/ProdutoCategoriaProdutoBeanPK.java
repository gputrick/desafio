package desafio.ejb.geral;


/*
  ** This file was automatically generated by EJBGen 2.16
  ** Build: 20050706-1110
*/


import java.io.Serializable;

// BEGIN imports from bean class
import desafio.CategoriaProdutoVO;
import desafio.ProdutoCategoriaProdutoVO;
import desafio.ProdutoVO;
import desafio.infra.DesafioException;
import itaipu.util.ServiceLocator;
import java.util.Collection;
import javax.ejb.CreateException;
import javax.naming.NamingException;
import weblogic.ejb.GenericEntityBean;
// END imports from bean class


public class ProdutoCategoriaProdutoBeanPK implements Serializable {

    public java.lang.Long id_categoria_produto;
  public java.lang.Long id_produto;


    public ProdutoCategoriaProdutoBeanPK() {}
  public ProdutoCategoriaProdutoBeanPK(java.lang.Long id_categoria_produto, java.lang.Long id_produto) {
    this.id_categoria_produto = id_categoria_produto;
    this.id_produto = id_produto;

  }


  private int changeBoolean(boolean b) { if (b) return 1; else return 0; }
  private int m_hashCode = 0;
  public int hashCode() {
    if (0 == m_hashCode) {
      m_hashCode = (id_categoria_produto.hashCode()) ^ (id_produto.hashCode());
    }
    return m_hashCode;
  }

    public boolean equals(Object other) {
    if (other == this) return true;
    if (null == other) return false;
    if (other.hashCode() != hashCode()) return false;
    try {
      desafio.ejb.geral.ProdutoCategoriaProdutoBeanPK other2 = (desafio.ejb.geral.ProdutoCategoriaProdutoBeanPK) other;
      return (this.id_categoria_produto.equals(other2.id_categoria_produto)) && (this.id_produto.equals(other2.id_produto));
    }
    catch(ClassCastException ex) {
      return false;
    }
  }

    public String toString() { 
    StringBuffer result = new StringBuffer("[ProdutoCategoriaProdutoBeanPK ");
    result.append("id_categoria_produto:" + (null == id_categoria_produto ? "null" : id_categoria_produto.toString())).append(" ");
    result.append("id_produto:" + (null == id_produto ? "null" : id_produto.toString())).append(" ");
    result.append("]");
    return result.toString();
  }


}