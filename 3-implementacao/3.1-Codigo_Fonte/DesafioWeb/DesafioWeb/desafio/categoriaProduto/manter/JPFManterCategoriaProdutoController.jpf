package desafio.categoriaProduto.manter;
import com.bea.wlw.netui.pageflow.FormData;
import com.bea.wlw.netui.pageflow.Forward;
import com.bea.wlw.netui.pageflow.PageFlowController;
import com.bea.wlw.netui.pageflow.PreviousPageInfo;
import com.bea.wlw.netui.tags.databinding.SortFilterService;
import com.bea.wlw.netui.tags.html.Exceptions;
import desafio.CategoriaProdutoVO;
import itaipu.util.exceptions.AppException;
import desafio.jcs.JCSCategoriaProduto;
import desafio.produto.CategoriaProdutoFormBean;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.sql.RowSet;
import org.apache.struts.Globals;
import org.apache.struts.action.ActionForm;

/**
 * @jpf:controller nested="false"
 * @jpf:view-properties view-properties::
 * <!-- This data is auto-generated. Hand-editing this section is not recommended. -->
 * <view-properties>
 * <pageflow-object id="pageflow:/desafio/categoriaProduto/manter/JPFManterCategoriaProdutoController.jpf"/>
 * <pageflow-object id="action:begin.do">
 *   <property value="620" name="x"/>
 *   <property value="60" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acPaginacaoCategoriaProduto.do">
 *   <property value="820" name="x"/>
 *   <property value="260" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acPaginacaoCategoriaPai.do">
 *   <property value="720" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acObterListaCategoriaProduto.do#desafio.produto.CategoriaProdutoFormBean">
 *   <property value="680" name="x"/>
 *   <property value="660" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acEliminarCategoriaProduto.do">
 *   <property value="580" name="x"/>
 *   <property value="560" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acSelecionaCategoriaProduto.do">
 *   <property value="1040" name="x"/>
 *   <property value="260" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acIrParaVisualizarCategoriaProduto.do">
 *   <property value="1100" name="x"/>
 *   <property value="360" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acObterListaSubCategoria.do#desafio.produto.CategoriaProdutoFormBean">
 *   <property value="1240" name="x"/>
 *   <property value="260" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acCadastrarCategoriaProduto.do">
 *   <property value="360" name="x"/>
 *   <property value="260" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acIrParaAlterarCategoriaProduto.do">
 *   <property value="380" name="x"/>
 *   <property value="560" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acVoltarAPaginaAnterior.do">
 *   <property value="100" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acIrParaConsultarCategoriaProduto.do">
 *   <property value="1200" name="x"/>
 *   <property value="560" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarCategoriaProduto.jsp@#@action:acEliminarCategoriaProduto.do@">
 *   <property value="640,640,580,580" name="elbowsX"/>
 *   <property value="204,360,360,517" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarCategoriaProduto.jsp@#@action:acObterListaCategoriaProduto.do#desafio.produto.CategoriaProdutoFormBean@">
 *   <property value="651,651,669,669" name="elbowsX"/>
 *   <property value="204,410,410,617" name="elbowsY"/>
 *   <property value="South_2" name="fromPort"/>
 *   <property value="North_0" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarCategoriaProduto.jsp@#@action:acCadastrarCategoriaProduto.do@">
 *   <property value="604,500,500,396" name="elbowsX"/>
 *   <property value="153,153,253,253" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarCategoriaProduto.jsp@#@action:acIrParaAlterarCategoriaProduto.do@">
 *   <property value="604,510,510,416" name="elbowsX"/>
 *   <property value="153,153,553,553" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarCategoriaProduto.jsp@#@action:acSelecionaCategoriaProduto.do@">
 *   <property value="676,840,840,1004" name="elbowsX"/>
 *   <property value="153,153,253,253" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarCategoriaProduto.jsp@#@action:acPaginacaoCategoriaProduto.do@">
 *   <property value="676,730,730,784" name="elbowsX"/>
 *   <property value="164,164,253,253" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="page:consultarCategoriaProduto.jsp">
 *   <property value="640" name="x"/>
 *   <property value="160" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="page:../errorException.jsp">
 *   <property value="400" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acPaginacaoSubCategoriaProduto.do">
 *   <property value="1440" name="x"/>
 *   <property value="560" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarCategoriaProduto.jsp@#@action:acIrParaAlterarCategoriaProduto.do@">
 *   <property value="1224,820,820,416" name="elbowsX"/>
 *   <property value="453,453,542,542" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_0" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarCategoriaProduto.jsp@#@action:acObterListaSubCategoria.do#desafio.produto.CategoriaProdutoFormBean@">
 *   <property value="1249,1249,1240,1240" name="elbowsX"/>
 *   <property value="417,360,360,304" name="elbowsY"/>
 *   <property value="North_0" name="fromPort"/>
 *   <property value="South_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarCategoriaProduto.jsp@#@action:acIrParaConsultarCategoriaProduto.do@">
 *   <property value="1260,1260,1200,1200" name="elbowsX"/>
 *   <property value="504,510,510,517" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarCategoriaProduto.jsp@#@action:acPaginacaoSubCategoriaProduto.do@">
 *   <property value="1296,1350,1350,1404" name="elbowsX"/>
 *   <property value="453,453,553,553" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarCategoriaProduto.jsp@#@action:acEliminarCategoriaProduto.do@">
 *   <property value="1224,920,920,616" name="elbowsX"/>
 *   <property value="464,464,542,542" name="elbowsY"/>
 *   <property value="West_2" name="fromPort"/>
 *   <property value="East_0" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="page:visualizarCategoriaProduto.jsp">
 *   <property value="1260" name="x"/>
 *   <property value="460" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acDesvincularSubCategoria.do">
 *   <property value="500" name="x"/>
 *   <property value="780" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarCategoriaProduto.jsp@#@action:acVoltarAPaginaAnterior.do@">
 *   <property value="344,240,240,136" name="elbowsX"/>
 *   <property value="653,653,753,753" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarCategoriaProduto.jsp@#@action:acObterListaSubCategoriaVO.do#desafio.produto.CategoriaProdutoFormBean@">
 *   <property value="380,221,221,96" name="elbowsX"/>
 *   <property value="704,704,33,33" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarCategoriaProduto.jsp@#@action:acDesvincularSubCategoria.do@">
 *   <property value="416,440,440,464" name="elbowsX"/>
 *   <property value="653,653,773,773" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="page:alterarCategoriaProduto.jsp">
 *   <property value="380" name="x"/>
 *   <property value="660" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:cancel.do">
 *   <property value="920" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarCategoriaProduto.jsp@#@action:cancel.do@">
 *   <property value="920,920,920,920" name="elbowsX"/>
 *   <property value="804,810,810,817" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="page:cadastrarCategoriaProduto.jsp">
 *   <property value="920" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#consultarCategoriaProduto.jsp#@action:begin.do@">
 *   <property value="620,620,640,640" name="elbowsX"/>
 *   <property value="104,110,110,117" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acPaginacaoCategoriaProduto.do@@">
 *   <property value="820" name="x"/>
 *   <property value="360" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acPaginacaoCategoriaProduto.do@">
 *   <property value="820,820,820,820" name="elbowsX"/>
 *   <property value="304,310,310,317" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acPaginacaoCategoriaPai.do@@">
 *   <property value="740" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acPaginacaoCategoriaPai.do@">
 *   <property value="720,720,704,704" name="elbowsX"/>
 *   <property value="804,814,814,853" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#consultarCategoriaProduto.jsp#@action:acObterListaCategoriaProduto.do#desafio.produto.CategoriaProdutoFormBean@">
 *   <property value="680,680,651,651" name="elbowsX"/>
 *   <property value="617,410,410,204" name="elbowsY"/>
 *   <property value="North_1" name="fromPort"/>
 *   <property value="South_2" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#acObterListaCategoriaProduto.do#@action:acEliminarCategoriaProduto.do@">
 *   <property value="580,580,612,644" name="elbowsX"/>
 *   <property value="604,653,653,653" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#acIrParaVisualizarCategoriaProduto.do#@action:acSelecionaCategoriaProduto.do@">
 *   <property value="1040,1040,1100,1100" name="elbowsX"/>
 *   <property value="304,310,310,317" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#visualizarCategoriaProduto.jsp#@action:acIrParaVisualizarCategoriaProduto.do@">
 *   <property value="1136,1180,1180,1224" name="elbowsX"/>
 *   <property value="353,353,442,442" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_0" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#visualizarCategoriaProduto.jsp#@action:acObterListaSubCategoria.do#desafio.produto.CategoriaProdutoFormBean@">
 *   <property value="1240,1240,1260,1260" name="elbowsX"/>
 *   <property value="304,360,360,417" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#alterarCategoriaProduto.jsp#@action:acIrParaAlterarCategoriaProduto.do@">
 *   <property value="380,380,380,380" name="elbowsX"/>
 *   <property value="604,610,610,617" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#previousPage#@action:acVoltarAPaginaAnterior.do@@">
 *   <property value="100" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#previousPage#@action:acVoltarAPaginaAnterior.do@">
 *   <property value="100,100,100,100" name="elbowsX"/>
 *   <property value="804,810,810,817" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="control:desafio.jcs.JCSCategoriaProduto#jCSCategoriaProduto">
 *   <property value="560" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#consultarCategoriaProduto.jsp#@action:acIrParaConsultarCategoriaProduto.do@">
 *   <property value="1164,920,920,676" name="elbowsX"/>
 *   <property value="553,553,153,153" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="action:acObterListaSubCategoriaVO.do#desafio.produto.CategoriaProdutoFormBean">
 *   <property value="60" name="x"/>
 *   <property value="40" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acObterListaSubCategoriaVO.do#desafio.produto.CategoriaProdutoFormBean@@">
 *   <property value="140" name="x"/>
 *   <property value="140" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acObterListaSubCategoriaVO.do#desafio.produto.CategoriaProdutoFormBean@">
 *   <property value="60,60,82,104" name="elbowsX"/>
 *   <property value="84,133,133,133" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acDesvincularSubCategoria.do@@">
 *   <property value="100" name="x"/>
 *   <property value="80" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acDesvincularSubCategoria.do@">
 *   <property value="464,300,300,136" name="elbowsX"/>
 *   <property value="762,762,73,73" name="elbowsY"/>
 *   <property value="West_0" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * </view-properties>
 * ::
 */
public class JPFManterCategoriaProdutoController extends PageFlowController
{   
    /**
	* @common:control
	*/
    private JCSCategoriaProduto jCSCategoriaProduto;
    
    public CategoriaProdutoFormBean categoriaProdutoFormBean;
    
    public transient PreviousPageInfo currentPage;
	public transient SortFilterService sortFilterService;
	public transient SortFilterService sortFilterServiceObter;
    
    public transient RowSet listaCategoriaProduto;
    public transient String gridListaCategoriaProduto = "gridListaCategoriaProduto";
    
    public transient RowSet listaSubCategoria;
    public transient String gridListaSubCategoria = "gridListaSubCategoria";
    
    public transient CategoriaProdutoVO[] listaSubCategoriaVO;
    public transient Object listaSubCategoriaVOFiltrada;
    // Uncomment this declaration to access Global.app.
    // 
    //     protected global.Global globalApp;
    // 

    // For an example of page flow exception handling see the example "catch" and "exception-handler"
    // annotations in {project}/WEB-INF/src/global/Global.app

    /**
     * This method represents the point of entry into the pageflow
     * @jpf:action
     * @jpf:forward name="success" path="consultarCategoriaProduto.jsp"
     * @jpf:catch type="Exception" method="exceptionHandler"
     */
    protected Forward begin() throws Exception
    {
        this.categoriaProdutoFormBean = new CategoriaProdutoFormBean();
        
        this.sortFilterService = SortFilterService.getInstance(getRequest());
        this.listaCategoriaProduto = this.jCSCategoriaProduto.obterListaCategoriaProduto(null, categoriaProdutoFormBean.getNomeCategoriaProdutoFiltro(), this.sortFilterService.getDatabaseFilter(this.gridListaCategoriaProduto));       
        
        return new Forward("success", this.categoriaProdutoFormBean);
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="currentPage"
     * @jpf:catch type="Exception" method="exceptionHandler"
     */
    protected Forward acPaginacaoCategoriaProduto()
    {
        this.sortFilterService = SortFilterService.getInstance(getRequest()); 
                           
        return new Forward("success");
    }
    
      /**
     * @jpf:action
     * @jpf:forward name="success" return-to="currentPage"
     * @jpf:catch type="Exception" method="exceptionHandler"
     */
    protected Forward acPaginacaoCategoriaPai()
    {
        this.sortFilterService = SortFilterService.getInstance(getRequest());
                            
        return new Forward("success");
    }

    /**
     * @jpf:action
     * @jpf:catch type="Exception" method="exceptionHandler"
     * @jpf:forward name="success" path="consultarCategoriaProduto.jsp"
     */
    protected Forward acObterListaCategoriaProduto(CategoriaProdutoFormBean categoriaProdutoFormBean) throws Exception
    {
        this.sortFilterService = SortFilterService.getInstance(getRequest());
        this.listaCategoriaProduto = this.jCSCategoriaProduto.obterListaCategoriaProduto(null, categoriaProdutoFormBean.getNomeCategoriaProdutoFiltro(), this.sortFilterService.getDatabaseFilter(this.gridListaCategoriaProduto));       
        
        return new Forward("success"); 
    }
    
     /**
     * @jpf:action
     * @jpf:forward name="success" path="acObterListaCategoriaProduto.do"
     * @jpf:catch type="Exception" method="exceptionHandler"
     */
    protected Forward acEliminarCategoriaProduto() throws Exception
    {
        if (this.categoriaProdutoFormBean.getCategoriaProdutoVO().getId_categoria_produto() > 0) {
            this.jCSCategoriaProduto.eliminarCategoriaProduto(this.categoriaProdutoFormBean.getCategoriaProdutoVO());
        }	
		return new Forward("success");   
    }
    
    
    /**
    * @jpf:action
    * @jpf:forward name="success" path="acIrParaVisualizarCategoriaProduto.do"
    * @jpf:catch type="Exception" method="exceptionHandler"
    */
      protected Forward acSelecionaCategoriaProduto() throws Exception {      
        String id_categoria_produto = SortFilterService.decodeUniqueIdentifier(getRequest(), this.gridListaCategoriaProduto, "id_categoria_produto");
        if(id_categoria_produto != null){
            this.categoriaProdutoFormBean.setCategoriaProdutoVO(new CategoriaProdutoVO());
            this.categoriaProdutoFormBean.getCategoriaProdutoVO().setId_categoria_produto(Long.parseLong(id_categoria_produto));
        }
        return new Forward("success");    
      }		
      
    /**
      * @jpf:exception-handler
      * @jpf:forward name="errorPage" path="../errorException.jsp"
      */
    protected Forward exceptionHandler(Exception ex, String actionName, String mesage, FormData form) {
        String displayMesage;
        if(AppException.isMensagemNegocio(ex)){
            String keyError = AppException.obtemKeyErro(ex);
            ResourceBundle msgs;
            msgs= ResourceBundle.getBundle("msgs", (Locale)this.getRequest().getSession().getAttribute(Globals.LOCALE_KEY));
            displayMesage = "Erro: " + actionName + " - " + msgs.getString("MSG_ERROR_"+ keyError);
            getRequest().setAttribute("errorMessage",displayMesage);
        }else{
            displayMesage = "Erro: " + actionName + " - " + ex.getMessage();
        }
        return new Forward( "errorPage" ); 
    }    

    /**
	* @jpf:action
    * @jpf:forward name="success" path="visualizarCategoriaProduto.jsp"
    * @jpf:catch type="Exception"  method="exceptionHandler"
    */
    protected Forward acIrParaVisualizarCategoriaProduto() throws Exception
    {
        this.categoriaProdutoFormBean.setCategoriaProdutoVO(this.jCSCategoriaProduto.obterCategoriaProduto(this.categoriaProdutoFormBean.getCategoriaProdutoVO()));
        
        this.sortFilterService = SortFilterService.getInstance(getRequest());
        this.listaSubCategoria = this.jCSCategoriaProduto.obterListaSubCategoria(this.categoriaProdutoFormBean.getCategoriaProdutoVO(), null , this.sortFilterService.getDatabaseFilter(this.gridListaSubCategoria));

        return new Forward("success");
    }
    
     /**
	* @jpf:action
    * @jpf:forward name="success" path="visualizarCategoriaProduto.jsp"
    * @jpf:catch type="Exception"  method="exceptionHandler"
    */
    protected Forward acObterListaSubCategoria(CategoriaProdutoFormBean categoriaProdutoFormBean) throws Exception
    {
        this.categoriaProdutoFormBean.setCategoriaProdutoVO(this.jCSCategoriaProduto.obterCategoriaProduto(this.categoriaProdutoFormBean.getCategoriaProdutoVO()));
        
        this.sortFilterService = SortFilterService.getInstance(getRequest());
        this.listaSubCategoria = this.jCSCategoriaProduto.obterListaSubCategoria(this.categoriaProdutoFormBean.getCategoriaProdutoVO(), categoriaProdutoFormBean.getNomeCategoriaProdutoFiltro() , this.sortFilterService.getDatabaseFilter(this.gridListaSubCategoria));

        return new Forward("success");
    }
    /**
	* @jpf:action
    * @jpf:forward return-to="currentPage" name="success" 
    * @jpf:catch type="Exception"  method="exceptionHandler"
    */
    protected Forward acObterListaSubCategoriaVO(CategoriaProdutoFormBean categoriaProdutoFormBean) throws Exception
    {   
        if(categoriaProdutoFormBean.getNomeCategoriaProdutoFiltro().trim().equals("")){
            this.listaSubCategoriaVOFiltrada = this.listaSubCategoriaVO;
        }else{
            ArrayList listaSubCategoriaVODinamica = new ArrayList();
            for(int i = 0; i < this.listaSubCategoriaVO.length; i++){
                if((this.listaSubCategoriaVO[i].getNome_categoria_produto().toUpperCase().indexOf(categoriaProdutoFormBean.getNomeCategoriaProdutoFiltro().trim().toUpperCase())) >= 0){
                    listaSubCategoriaVODinamica.add(this.listaSubCategoriaVO[i]);
                }
            }
            this.listaSubCategoriaVOFiltrada = listaSubCategoriaVODinamica.toArray();
        }

        return new Forward("success");
    }
    /**
     * @jpf:action
     */
    protected Forward acCadastrarCategoriaProduto()
    {
        return new Forward("success");
    }

	
/**
  * @jpf:action
  * @jpf:forward name="success" path="alterarCategoriaProduto.jsp"
  * @jpf:catch type="Exception" method="exceptionHandler"
  */
  protected Forward acIrParaAlterarCategoriaProduto() throws Exception {  
    
        String id_categoria_produto = SortFilterService.decodeUniqueIdentifier(getRequest(), this.gridListaCategoriaProduto, "id_categoria_produto");
        
        if(id_categoria_produto != null){
            this.categoriaProdutoFormBean.setCategoriaProdutoVO(new CategoriaProdutoVO());
            this.categoriaProdutoFormBean.getCategoriaProdutoVO().setId_categoria_produto(Long.parseLong(id_categoria_produto));
        }
        
        this.categoriaProdutoFormBean.setCategoriaProdutoVO(this.jCSCategoriaProduto.obterCategoriaProduto(this.categoriaProdutoFormBean.getCategoriaProdutoVO()));
        
        this.sortFilterService = SortFilterService.getInstance(getRequest());
        this.listaSubCategoriaVO = this.jCSCategoriaProduto.obterListaCategoriaProdutoPorCategoriaPai(this.categoriaProdutoFormBean.getCategoriaProdutoVO());
        this.listaSubCategoriaVOFiltrada = this.listaSubCategoriaVO;
        
		return new Forward("success");        
  } 
    
    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="previousPage"
     * @jpf:catch type="Exception" method="exceptionHandler"
     */
    protected Forward acVoltarAPaginaAnterior()
    {
        return new Forward("success");
    }
    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="currentPage"
     * @jpf:catch type="Exception" method="exceptionHandler"
     */
    protected Forward acDesvincularSubCategoria() throws Exception
    {
        CategoriaProdutoVO[] listaSubCategoriaVO = new CategoriaProdutoVO[this.listaSubCategoriaVO.length-1];
        int j = 0;
        for(int i = 0; i < this.listaSubCategoriaVO.length; i++){
            if(this.categoriaProdutoFormBean.getCategoriaProdutoVO().getId_categoria_produto() != this.listaSubCategoriaVO[i].getId_categoria_produto()){
                listaSubCategoriaVO[j++]=this.listaSubCategoriaVO[i];
            }
        }
        this.listaSubCategoriaVO = listaSubCategoriaVO;
        this.listaSubCategoriaVOFiltrada = listaSubCategoriaVO;
        return new Forward("success");
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" path="consultarCategoriaProduto.jsp"
     */
    protected Forward acIrParaConsultarCategoriaProduto()
    {
        return new Forward("success");
    }
}