package desafio.categoriaProduto.manter;
import com.bea.wlw.netui.pageflow.FormData;
import com.bea.wlw.netui.pageflow.Forward;
import com.bea.wlw.netui.pageflow.PageFlowController;
import com.bea.wlw.netui.pageflow.PreviousPageInfo;
import com.bea.wlw.netui.tags.databinding.SortFilterService;
import com.bea.wlw.netui.tags.html.Exceptions;
import desafio.CategoriaProdutoVO;
import itaipu.util.exceptions.AppException;
import desafio.jcs.JCSCategoriaProduto;
import desafio.categoriaProduto.CategoriaProdutoFormBean;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.sql.RowSet;
import org.apache.struts.Globals;
import org.apache.struts.action.ActionForm;

/**
 * @jpf:controller nested="false"
 * @jpf:view-properties view-properties::
 * <!-- This data is auto-generated. Hand-editing this section is not recommended. -->
 * <view-properties>
 * <pageflow-object id="pageflow:/desafio/categoriaProduto/manter/JPFManterCategoriaProdutoController.jpf"/>
 * <pageflow-object id="action:begin.do">
 *   <property value="1560" name="x"/>
 *   <property value="60" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acPaginacaoCategoriaProduto.do">
 *   <property value="1080" name="x"/>
 *   <property value="260" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acPaginacaoSubCategoriaProduto.do">
 *   <property value="2020" name="x"/>
 *   <property value="180" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acObterListaCategoriaProduto.do#desafio.categoriaProduto.CategoriaProdutoFormBean">
 *   <property value="1720" name="x"/>
 *   <property value="660" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acEliminarCategoriaProduto.do">
 *   <property value="1700" name="x"/>
 *   <property value="560" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acSelecionaCategoriaProduto.do">
 *   <property value="1440" name="x"/>
 *   <property value="260" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acIrParaVisualizarCategoriaProduto.do">
 *   <property value="1420" name="x"/>
 *   <property value="360" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acObterListaSubCategoria.do#desafio.categoriaProduto.CategoriaProdutoFormBean">
 *   <property value="1740" name="x"/>
 *   <property value="260" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acObterListaSubCategoriaVO.do#desafio.categoriaProduto.CategoriaProdutoFormBean">
 *   <property value="220" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acCadastrarCategoriaProduto.do">
 *   <property value="840" name="x"/>
 *   <property value="260" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acIrParaAlterarCategoriaProduto.do">
 *   <property value="940" name="x"/>
 *   <property value="560" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acObterListaSubCategoriaPopup.do#desafio.categoriaProduto.CategoriaProdutoFormBean">
 *   <property value="620" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acVoltarAPaginaAnterior.do">
 *   <property value="420" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acDesvincularSubCategoria.do">
 *   <property value="1580" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acIrParaConsultarCategoriaProduto.do">
 *   <property value="1740" name="x"/>
 *   <property value="40" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acAbrirPopupVincularSubCategoria.do">
 *   <property value="860" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acVinculaSubCategoria.do">
 *   <property value="1080" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acApagarMesagem.do">
 *   <property value="1240" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acFechaPopup.do">
 *   <property value="1740" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acAlterarCategoriaProduto.do">
 *   <property value="2140" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acIrParaCadastrarCategoriaProduto.do">
 *   <property value="1920" name="x"/>
 *   <property value="660" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarCategoriaProduto.jsp@#@action:acSelecionaCategoriaProduto.do@">
 *   <property value="1524,1500,1500,1476" name="elbowsX"/>
 *   <property value="153,153,253,253" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarCategoriaProduto.jsp@#@action:acEliminarCategoriaProduto.do@">
 *   <property value="1596,1630,1630,1664" name="elbowsX"/>
 *   <property value="164,164,553,553" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarCategoriaProduto.jsp@#@action:acIrParaAlterarCategoriaProduto.do@">
 *   <property value="1524,1250,1250,976" name="elbowsX"/>
 *   <property value="164,164,553,553" name="elbowsY"/>
 *   <property value="West_2" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarCategoriaProduto.jsp@#@action:acObterListaCategoriaProduto.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="1596,1640,1640,1684" name="elbowsX"/>
 *   <property value="164,164,653,653" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarCategoriaProduto.jsp@#@action:acPaginacaoCategoriaProduto.do@">
 *   <property value="1524,1320,1320,1116" name="elbowsX"/>
 *   <property value="164,164,253,253" name="elbowsY"/>
 *   <property value="West_2" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="page:consultarCategoriaProduto.jsp">
 *   <property value="1560" name="x"/>
 *   <property value="160" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="page:../errorException.jsp">
 *   <property value="100" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarCategoriaProduto.jsp@#@action:acIrParaAlterarCategoriaProduto.do@">
 *   <property value="1704,1340,1340,976" name="elbowsX"/>
 *   <property value="453,453,542,542" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_0" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarCategoriaProduto.jsp@#@action:acObterListaSubCategoria.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="1740,1740,1740,1740" name="elbowsX"/>
 *   <property value="417,360,360,304" name="elbowsY"/>
 *   <property value="North_1" name="fromPort"/>
 *   <property value="South_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarCategoriaProduto.jsp@#@action:acIrParaConsultarCategoriaProduto.do@">
 *   <property value="1729,1729,1740,1740" name="elbowsX"/>
 *   <property value="417,250,250,84" name="elbowsY"/>
 *   <property value="North_0" name="fromPort"/>
 *   <property value="South_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarCategoriaProduto.jsp@#@action:acPaginacaoSubCategoriaProduto.do@">
 *   <property value="1776,1880,1880,1984" name="elbowsX"/>
 *   <property value="453,453,173,173" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarCategoriaProduto.jsp@#@action:acEliminarCategoriaProduto.do@">
 *   <property value="1740,1740,1700,1700" name="elbowsX"/>
 *   <property value="504,510,510,517" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="page:visualizarCategoriaProduto.jsp">
 *   <property value="1740" name="x"/>
 *   <property value="460" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acPaginacaoSubCategoria.do">
 *   <property value="1400" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarCategoriaProduto.jsp@#@action:acPaginacaoSubCategoria.do@">
 *   <property value="1156,1260,1260,1364" name="elbowsX"/>
 *   <property value="664,664,753,753" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarCategoriaProduto.jsp@#@action:acAlterarCategoriaProduto.do@">
 *   <property value="1156,1630,1630,2104" name="elbowsX"/>
 *   <property value="653,653,753,753" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarCategoriaProduto.jsp@#@action:acVinculaSubCategoria.do@">
 *   <property value="1120,1120,1080,1080" name="elbowsX"/>
 *   <property value="704,710,710,717" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarCategoriaProduto.jsp@#@action:acApagarMesagem.do@">
 *   <property value="1156,1180,1180,1204" name="elbowsX"/>
 *   <property value="664,664,753,753" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarCategoriaProduto.jsp@#@action:acAbrirPopupVincularSubCategoria.do@">
 *   <property value="1084,990,990,896" name="elbowsX"/>
 *   <property value="664,664,753,753" name="elbowsY"/>
 *   <property value="West_2" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarCategoriaProduto.jsp@#@action:acObterListaSubCategoriaVO.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="1084,670,670,256" name="elbowsX"/>
 *   <property value="664,664,753,753" name="elbowsY"/>
 *   <property value="West_2" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarCategoriaProduto.jsp@#@action:acVoltarAPaginaAnterior.do@">
 *   <property value="1084,770,770,456" name="elbowsX"/>
 *   <property value="653,653,753,753" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarCategoriaProduto.jsp@#@action:acObterListaSubCategoriaPopup.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="1084,870,870,656" name="elbowsX"/>
 *   <property value="664,664,753,753" name="elbowsY"/>
 *   <property value="West_2" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarCategoriaProduto.jsp@#@action:acFechaPopup.do@">
 *   <property value="1156,1430,1430,1704" name="elbowsX"/>
 *   <property value="664,664,753,753" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarCategoriaProduto.jsp@#@action:acDesvincularSubCategoria.do@">
 *   <property value="1156,1350,1350,1544" name="elbowsX"/>
 *   <property value="653,653,753,753" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="page:alterarCategoriaProduto.jsp">
 *   <property value="1120" name="x"/>
 *   <property value="660" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="page:cadastrarCategoriaProduto.jsp">
 *   <property value="1940" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#consultarCategoriaProduto.jsp#@action:begin.do@">
 *   <property value="1560,1560,1560,1560" name="elbowsX"/>
 *   <property value="104,110,110,117" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acPaginacaoCategoriaProduto.do@@">
 *   <property value="1080" name="x"/>
 *   <property value="360" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acPaginacaoCategoriaProduto.do@">
 *   <property value="1080,1080,1080,1080" name="elbowsX"/>
 *   <property value="304,310,310,317" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acPaginacaoSubCategoriaProduto.do@@">
 *   <property value="140" name="x"/>
 *   <property value="140" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acPaginacaoSubCategoriaProduto.do@">
 *   <property value="1864,1020,1020,176" name="elbowsX"/>
 *   <property value="542,542,133,133" name="elbowsY"/>
 *   <property value="West_0" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#consultarCategoriaProduto.jsp#@action:acObterListaCategoriaProduto.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="1684,1640,1640,1596" name="elbowsX"/>
 *   <property value="653,653,164,164" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_2" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#acObterListaCategoriaProduto.do#@action:acEliminarCategoriaProduto.do@">
 *   <property value="1700,1700,1720,1720" name="elbowsX"/>
 *   <property value="604,610,610,617" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#acIrParaVisualizarCategoriaProduto.do#@action:acSelecionaCategoriaProduto.do@">
 *   <property value="1440,1440,1420,1420" name="elbowsX"/>
 *   <property value="304,310,310,317" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#visualizarCategoriaProduto.jsp#@action:acIrParaVisualizarCategoriaProduto.do@">
 *   <property value="1456,1580,1580,1704" name="elbowsX"/>
 *   <property value="364,364,453,453" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#visualizarCategoriaProduto.jsp#@action:acObterListaSubCategoria.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="1729,1729,1729,1729" name="elbowsX"/>
 *   <property value="304,360,360,417" name="elbowsY"/>
 *   <property value="South_0" name="fromPort"/>
 *   <property value="North_0" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acObterListaSubCategoriaVO.do#desafio.categoriaProduto.CategoriaProdutoFormBean@@">
 *   <property value="240" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acObterListaSubCategoriaVO.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="220,220,204,204" name="elbowsX"/>
 *   <property value="804,814,814,853" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#alterarCategoriaProduto.jsp#@action:acIrParaAlterarCategoriaProduto.do@">
 *   <property value="976,1030,1030,1084" name="elbowsX"/>
 *   <property value="564,564,642,642" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="West_0" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acObterListaSubCategoriaPopup.do#desafio.categoriaProduto.CategoriaProdutoFormBean@@">
 *   <property value="660" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acObterListaSubCategoriaPopup.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="620,620,622,624" name="elbowsX"/>
 *   <property value="804,853,853,853" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#previousPage#@action:acVoltarAPaginaAnterior.do@@">
 *   <property value="420" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#previousPage#@action:acVoltarAPaginaAnterior.do@">
 *   <property value="420,420,420,420" name="elbowsX"/>
 *   <property value="804,810,810,817" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acDesvincularSubCategoria.do@@">
 *   <property value="1540" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acDesvincularSubCategoria.do@">
 *   <property value="1580,1580,1540,1540" name="elbowsX"/>
 *   <property value="804,810,810,817" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#begin.do#@action:acIrParaConsultarCategoriaProduto.do@">
 *   <property value="1704,1650,1650,1596" name="elbowsX"/>
 *   <property value="33,33,53,53" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acAbrirPopupVincularSubCategoria.do@@">
 *   <property value="900" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acAbrirPopupVincularSubCategoria.do@">
 *   <property value="860,860,862,864" name="elbowsX"/>
 *   <property value="804,853,853,853" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acVinculaSubCategoria.do@@">
 *   <property value="1100" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acVinculaSubCategoria.do@">
 *   <property value="1080,1080,1064,1064" name="elbowsX"/>
 *   <property value="804,814,814,853" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acApagarMesagem.do@@">
 *   <property value="1280" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acApagarMesagem.do@">
 *   <property value="1240,1240,1242,1244" name="elbowsX"/>
 *   <property value="804,853,853,853" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acFechaPopup.do@@">
 *   <property value="1780" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acFechaPopup.do@">
 *   <property value="1740,1740,1742,1744" name="elbowsX"/>
 *   <property value="804,853,853,853" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#acIrParaVisualizarCategoriaProduto.do#@action:acAlterarCategoriaProduto.do@">
 *   <property value="2104,1780,1780,1456" name="elbowsX"/>
 *   <property value="753,753,353,353" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#error#currentPage#@action:acAlterarCategoriaProduto.do@@">
 *   <property value="2160" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#error#currentPage#@action:acAlterarCategoriaProduto.do@">
 *   <property value="2140,2140,2124,2124" name="elbowsX"/>
 *   <property value="804,814,814,853" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="error" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#cadastrarCategoriaProduto.jsp#@action:acIrParaCadastrarCategoriaProduto.do@">
 *   <property value="1920,1920,1940,1940" name="elbowsX"/>
 *   <property value="704,710,710,717" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="control:desafio.jcs.JCSCategoriaProduto#jCSCategoriaProduto">
 *   <property value="780" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarCategoriaProduto.jsp@#@action:acAbrirPopupVincularSubCategoria.do@">
 *   <property value="1904,1400,1400,896" name="elbowsX"/>
 *   <property value="753,753,742,742" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_0" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarCategoriaProduto.jsp@#@action:acVinculaSubCategoria.do@">
 *   <property value="1904,1510,1510,1116" name="elbowsX"/>
 *   <property value="742,742,753,753" name="elbowsY"/>
 *   <property value="West_0" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarCategoriaProduto.jsp@#@action:acApagarMesagem.do@">
 *   <property value="1904,1590,1590,1276" name="elbowsX"/>
 *   <property value="742,742,753,753" name="elbowsY"/>
 *   <property value="West_0" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarCategoriaProduto.jsp@#@action:acObterListaSubCategoriaPopup.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="1904,1280,1280,656" name="elbowsX"/>
 *   <property value="742,742,742,742" name="elbowsY"/>
 *   <property value="West_0" name="fromPort"/>
 *   <property value="East_0" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarCategoriaProduto.jsp@#@action:acObterListaSubCategoriaVO.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="1904,1080,1080,256" name="elbowsX"/>
 *   <property value="742,742,742,742" name="elbowsY"/>
 *   <property value="West_0" name="fromPort"/>
 *   <property value="East_0" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarCategoriaProduto.jsp@#@action:acPaginacaoSubCategoria.do@">
 *   <property value="1904,1670,1670,1436" name="elbowsX"/>
 *   <property value="742,742,753,753" name="elbowsY"/>
 *   <property value="West_0" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarCategoriaProduto.jsp@#@action:acDesvincularSubCategoria.do@">
 *   <property value="1904,1760,1760,1616" name="elbowsX"/>
 *   <property value="742,742,753,753" name="elbowsY"/>
 *   <property value="West_0" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarCategoriaProduto.jsp@#@action:acVoltarAPaginaAnterior.do@">
 *   <property value="1904,1180,1180,456" name="elbowsX"/>
 *   <property value="742,742,742,742" name="elbowsY"/>
 *   <property value="West_0" name="fromPort"/>
 *   <property value="East_0" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarCategoriaProduto.jsp@#@action:acFechaPopup.do@">
 *   <property value="1904,1840,1840,1776" name="elbowsX"/>
 *   <property value="742,742,753,753" name="elbowsY"/>
 *   <property value="West_0" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarCategoriaProduto.jsp@#@action:acIrParaCadastrarCategoriaProduto.do@">
 *   <property value="1596,1740,1740,1884" name="elbowsX"/>
 *   <property value="153,153,653,653" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarCategoriaProduto.jsp@#@action:acCadastrarCategoriaProduto.do@">
 *   <property value="1904,1390,1390,876" name="elbowsX"/>
 *   <property value="742,742,253,253" name="elbowsY"/>
 *   <property value="West_0" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#acIrParaVisualizarCategoriaProduto.do#@action:acCadastrarCategoriaProduto.do@">
 *   <property value="876,1130,1130,1384" name="elbowsX"/>
 *   <property value="264,264,353,353" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#error#currentPage#@action:acCadastrarCategoriaProduto.do@@">
 *   <property value="60" name="x"/>
 *   <property value="40" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#error#currentPage#@action:acCadastrarCategoriaProduto.do@">
 *   <property value="804,450,450,96" name="elbowsX"/>
 *   <property value="253,253,33,33" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 *   <property value="error" name="label"/>
 * </pageflow-object>
 * </view-properties>
 * ::
 */
public class JPFManterCategoriaProdutoController extends PageFlowController
{   
    /**
	* @common:control
	*/
    private JCSCategoriaProduto jCSCategoriaProduto;
    
    public CategoriaProdutoFormBean categoriaProdutoFormBean;
    
    public transient PreviousPageInfo currentPage;
	public transient SortFilterService sortFilterService;
	public transient SortFilterService sortFilterServiceObter;
    
    public transient RowSet listaCategoriaProduto;
    public transient String gridListaCategoriaProduto = "gridListaCategoriaProduto";
    
    public transient RowSet listaSubCategoria;
    public transient String gridListaSubCategoria = "gridListaSubCategoria";
    
    public transient CategoriaProdutoVO[] listaSubCategoriaVO;
    public transient Object listaSubCategoriaVOFiltrada;
    // Uncomment this declaration to access Global.app.
    // 
    //     protected global.Global globalApp;
    // 

    // For an example of page flow exception handling see the example "catch" and "exception-handler"
    // annotations in {project}/WEB-INF/src/global/Global.app

    /**
     * This method represents the point of entry into the pageflow
     * @jpf:action
     * @jpf:forward name="success" path="consultarCategoriaProduto.jsp"
     * @jpf:catch type="Exception" method="exceptionHandler"
     */
    protected Forward begin() throws Exception
    {
        this.categoriaProdutoFormBean = new CategoriaProdutoFormBean();
        
        this.sortFilterService = SortFilterService.getInstance(getRequest());
        this.listaCategoriaProduto = this.jCSCategoriaProduto.obterListaCategoriaProduto(null, categoriaProdutoFormBean.getNomeCategoriaProdutoFiltro(), this.sortFilterService.getDatabaseFilter(this.gridListaCategoriaProduto));       
        
        return new Forward("success", this.categoriaProdutoFormBean);
    }
    
    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="currentPage"
     * @jpf:catch type="Exception" method="exceptionHandler"
     */
    protected Forward acPaginacaoCategoriaProduto()
    {
        this.sortFilterService = SortFilterService.getInstance(getRequest()); 
                           
        return new Forward("success");
    }
    
    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="currentPage"
     * @jpf:catch type="Exception" method="exceptionHandler"
     */
    protected Forward acPaginacaoSubCategoriaProduto()
    {
        this.sortFilterService = SortFilterService.getInstance(getRequest()); 
        return new Forward("success");
    }
    
    /**
     * @jpf:action
     * @jpf:catch type="Exception" method="exceptionHandler"
     * @jpf:forward name="success" path="consultarCategoriaProduto.jsp"
     */
    protected Forward acObterListaCategoriaProduto(CategoriaProdutoFormBean categoriaProdutoFormBean) throws Exception
    {
        this.sortFilterService = SortFilterService.getInstance(getRequest());
        this.listaCategoriaProduto = this.jCSCategoriaProduto.obterListaCategoriaProduto(null, categoriaProdutoFormBean.getNomeCategoriaProdutoFiltro(), this.sortFilterService.getDatabaseFilter(this.gridListaCategoriaProduto));       
        
        return new Forward("success"); 
    }
    
     /**
     * @jpf:action
     * @jpf:forward name="success" path="acObterListaCategoriaProduto.do"
     * @jpf:catch type="Exception" method="exceptionHandler"
     */
    protected Forward acEliminarCategoriaProduto() throws Exception
    {
        if (this.categoriaProdutoFormBean.getCategoriaProdutoVO().getId_categoria_produto() > 0) {
            this.jCSCategoriaProduto.eliminarCategoriaProduto(this.categoriaProdutoFormBean.getCategoriaProdutoVO());
        }	
		return new Forward("success");   
    }
    
    
    /**
    * @jpf:action
    * @jpf:forward name="success" path="acIrParaVisualizarCategoriaProduto.do"
    * @jpf:catch type="Exception" method="exceptionHandler"
    */
      protected Forward acSelecionaCategoriaProduto() throws Exception {      
        String id_categoria_produto = SortFilterService.decodeUniqueIdentifier(getRequest(), this.gridListaCategoriaProduto, "id_categoria_produto");
        if(id_categoria_produto != null){
            this.categoriaProdutoFormBean.setCategoriaProdutoVO(new CategoriaProdutoVO());
            this.categoriaProdutoFormBean.getCategoriaProdutoVO().setId_categoria_produto(Long.parseLong(id_categoria_produto));
        }
        return new Forward("success");    
      }		
      
    /**
      * @jpf:exception-handler
      * @jpf:forward name="errorPage" path="../errorException.jsp"
      */
    protected Forward exceptionHandler(Exception ex, String actionName, String mesage, FormData form) {
        String displayMesage;
        if(AppException.isMensagemNegocio(ex)){
            String keyError = AppException.obtemKeyErro(ex);
            ResourceBundle msgs;
            msgs= ResourceBundle.getBundle("msgs", (Locale)this.getRequest().getSession().getAttribute(Globals.LOCALE_KEY));
            displayMesage = "Erro: " + actionName + " - " + msgs.getString("MSG_ERROR_"+ keyError);
            getRequest().setAttribute("errorMessage",displayMesage);
        }else{
            displayMesage = "Erro: " + actionName + " - " + ex.getMessage();
        }
        return new Forward( "errorPage" ); 
    }    

    /**
	* @jpf:action
    * @jpf:forward name="success" path="visualizarCategoriaProduto.jsp"
    * @jpf:catch type="Exception"  method="exceptionHandler"
    */
    protected Forward acIrParaVisualizarCategoriaProduto() throws Exception
    {
        this.categoriaProdutoFormBean.setCategoriaProdutoVO(this.jCSCategoriaProduto.obterCategoriaProduto(this.categoriaProdutoFormBean.getCategoriaProdutoVO()));
        
        this.sortFilterService = SortFilterService.getInstance(getRequest());
        this.listaSubCategoria = this.jCSCategoriaProduto.obterListaSubCategoria(this.categoriaProdutoFormBean.getCategoriaProdutoVO(), null , this.sortFilterService.getDatabaseFilter(this.gridListaSubCategoria));

        return new Forward("success");
    }
    
     /**
	* @jpf:action
    * @jpf:forward name="success" path="visualizarCategoriaProduto.jsp"
    * @jpf:catch type="Exception"  method="exceptionHandler"
    */
    protected Forward acObterListaSubCategoria(CategoriaProdutoFormBean categoriaProdutoFormBean) throws Exception
    {
        this.categoriaProdutoFormBean.setCategoriaProdutoVO(this.jCSCategoriaProduto.obterCategoriaProduto(this.categoriaProdutoFormBean.getCategoriaProdutoVO()));
        
        this.sortFilterService = SortFilterService.getInstance(getRequest());
        this.listaSubCategoria = this.jCSCategoriaProduto.obterListaSubCategoria(this.categoriaProdutoFormBean.getCategoriaProdutoVO(), categoriaProdutoFormBean.getNomeCategoriaProdutoFiltro() , this.sortFilterService.getDatabaseFilter(this.gridListaSubCategoria));

        return new Forward("success");
    }
    /**
	* @jpf:action
    * @jpf:forward return-to="currentPage" name="success" 
    * @jpf:catch type="Exception"  method="exceptionHandler"
    */
    protected Forward acObterListaSubCategoriaVO(CategoriaProdutoFormBean categoriaProdutoFormBean) throws Exception
    {   
        if(categoriaProdutoFormBean.getNomeCategoriaProdutoFiltro().trim().equals("")){
            this.listaSubCategoriaVOFiltrada = this.listaSubCategoriaVO;
        }else{
            ArrayList listaSubCategoriaVODinamica = new ArrayList();
            
            for(int i = 0; i < this.listaSubCategoriaVO.length; i++){
                if((this.listaSubCategoriaVO[i].getNome_categoria_produto().toUpperCase().indexOf(categoriaProdutoFormBean.getNomeCategoriaProdutoFiltro().trim().toUpperCase())) >= 0){
                    listaSubCategoriaVODinamica.add(this.listaSubCategoriaVO[i]);
                }
            }
            this.listaSubCategoriaVOFiltrada = listaSubCategoriaVODinamica.toArray();
        }

        return new Forward("success");
    }
	
/**
  * @jpf:action
  * @jpf:forward name="success" path="alterarCategoriaProduto.jsp"
  * @jpf:catch type="Exception" method="exceptionHandler"
  */
  protected Forward acIrParaAlterarCategoriaProduto() throws Exception {  
    
        String id_categoria_produto = SortFilterService.decodeUniqueIdentifier(getRequest(), this.gridListaCategoriaProduto, "id_categoria_produto");
        
        if(id_categoria_produto != null){
            this.categoriaProdutoFormBean.setCategoriaProdutoVO(new CategoriaProdutoVO());
            this.categoriaProdutoFormBean.getCategoriaProdutoVO().setId_categoria_produto(Long.parseLong(id_categoria_produto));
        }
        
        this.categoriaProdutoFormBean.setCategoriaProdutoVO(this.jCSCategoriaProduto.obterCategoriaProduto(this.categoriaProdutoFormBean.getCategoriaProdutoVO()));
        
        this.sortFilterService = SortFilterService.getInstance(getRequest());
        this.listaSubCategoriaVO = this.jCSCategoriaProduto.obterListaCategoriaProdutoPorCategoriaPai(this.categoriaProdutoFormBean.getCategoriaProdutoVO());
        this.listaSubCategoriaVOFiltrada = this.listaSubCategoriaVO;
        
		return new Forward("success");        
  }
  
      /**
     * @jpf:action
     * @jpf:forward name="success" return-to="currentPage"
     * @jpf:catch type="Exception" method="exceptionHandler"
     */
    protected Forward acObterListaSubCategoriaPopup(CategoriaProdutoFormBean categoriaProdutoFormBean) throws Exception{
        
        this.sortFilterService = SortFilterService.getInstance(getRequest());
        this.listaSubCategoria = this.jCSCategoriaProduto.obterListaCategoriaProduto(null, categoriaProdutoFormBean.getNomeCategoriaProdutoFiltroPopup(), this.sortFilterService.getDatabaseFilter(this.gridListaCategoriaProduto));
        
        return new Forward("success");
    } 
    
    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="previousPage"
     * @jpf:catch type="Exception" method="exceptionHandler"
     */
    protected Forward acVoltarAPaginaAnterior()
    {
        return new Forward("success");
    }
    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="currentPage"
     * @jpf:catch type="Exception" method="exceptionHandler"
     */
    protected Forward acDesvincularSubCategoria() throws Exception
    {
        CategoriaProdutoVO[] listaSubCategoriaVO = new CategoriaProdutoVO[this.listaSubCategoriaVO.length-1];
        int j = 0;
        for(int i = 0; i < this.listaSubCategoriaVO.length; i++){
            if(this.categoriaProdutoFormBean.getIdCategoriaProdutoFiltro() != this.listaSubCategoriaVO[i].getId_categoria_produto()){
                listaSubCategoriaVO[j++]=this.listaSubCategoriaVO[i];
            }
        }
        this.listaSubCategoriaVO = listaSubCategoriaVO;
        this.listaSubCategoriaVOFiltrada = listaSubCategoriaVO;
        return new Forward("success");
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" path="begin.do"
     */
    protected Forward acIrParaConsultarCategoriaProduto()
    {
        return new Forward("success");
    }
    
    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="currentPage"
     */
    protected Forward acAbrirPopupVincularSubCategoria() throws Exception
    {
        this.sortFilterService = SortFilterService.getInstance(getRequest());
        this.listaSubCategoria = this.jCSCategoriaProduto.obterListaCategoriaProduto(null, null, this.sortFilterService.getDatabaseFilter(this.gridListaCategoriaProduto));
        this.categoriaProdutoFormBean.setDisplayPopup("block");
        return new Forward("success");
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="currentPage"
     * @jpf:catch type="Exception" method="exceptionHandler"
     */
    protected Forward acVinculaSubCategoria() throws Exception
    {   
        long id_categoria_produto = Long.parseLong(SortFilterService.decodeUniqueIdentifier(getRequest(), this.gridListaSubCategoria, "id_categoria_produto"));
        
        boolean categoriaJaVinculada = false;
        
        if(id_categoria_produto == categoriaProdutoFormBean.getCategoriaProdutoVO().getId_categoria_produto()){
            this.categoriaProdutoFormBean.setMensagem("Uma categoria não pode ser vinculada com ela mesma!");
        }else{
            
            for(int i = 0; i < this.listaSubCategoriaVO.length; i++){
                if(id_categoria_produto == this.listaSubCategoriaVO[i].getId_categoria_produto()){
                    categoriaJaVinculada = true;
                    this.categoriaProdutoFormBean.setMensagem("Sub-categoria já vinculada!");
                    break;
                }
            }
        
            if(!categoriaJaVinculada){
                CategoriaProdutoVO categoriaProdutoVO = new CategoriaProdutoVO();
                categoriaProdutoVO.setId_categoria_produto(id_categoria_produto);
                
                categoriaProdutoVO = this.jCSCategoriaProduto.obterCategoriaProduto(categoriaProdutoVO);
                
                CategoriaProdutoVO[] listaSubCategoriaVO = new CategoriaProdutoVO[this.listaSubCategoriaVO.length+1];
                for(int j = 0; j < this.listaSubCategoriaVO.length; j++){
                    listaSubCategoriaVO[j] = this.listaSubCategoriaVO[j];
                }
                listaSubCategoriaVO[this.listaSubCategoriaVO.length] = categoriaProdutoVO;
                
                this.listaSubCategoriaVO = listaSubCategoriaVO;
                this.listaSubCategoriaVOFiltrada = this.listaSubCategoriaVO;
                this.categoriaProdutoFormBean.setDisplayPopup("none");
            }
        }
        return new Forward("success");
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="currentPage"
     */
    protected Forward acApagarMesagem()
    {
        this.categoriaProdutoFormBean.setMensagem(null);
        return new Forward("success");
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="currentPage"
     */
    protected Forward acFechaPopup()
    {
        this.categoriaProdutoFormBean.setDisplayPopup("none");
        return new Forward("success");
    }

    /**
     * @jpf:action
     * @jpf:catch type="Exception" method="exceptionHandler"
     * @jpf:forward name="success" path="acIrParaVisualizarCategoriaProduto.do"
     * @jpf:forward name="error" return-to="currentPage"
     */
    protected Forward acAlterarCategoriaProduto() throws Exception
    {
        if(!this.categoriaProdutoFormBean.getCategoriaProdutoVO().getNome_categoria_produto().trim().equals("")){
            CategoriaProdutoVO categoriaProdutoVO = this.categoriaProdutoFormBean.getCategoriaProdutoVO();
            this.jCSCategoriaProduto.atualizarCategoriaProduto(categoriaProdutoVO, this.listaSubCategoriaVO);
            return new Forward("success");
        }else{
            this.categoriaProdutoFormBean.setMensagem("Insira o nome da categoria");
            return new Forward("error");
        }
    }

    /**
     * @jpf:action
     * @jpf:catch type="Exception" method="exceptionHandler"
     * @jpf:forward name="success" path="cadastrarCategoriaProduto.jsp"
     */
    protected Forward acIrParaCadastrarCategoriaProduto()
    {
        this.categoriaProdutoFormBean = new CategoriaProdutoFormBean();
        this.listaSubCategoriaVO = new CategoriaProdutoVO[0];
        this.listaSubCategoriaVOFiltrada = new CategoriaProdutoVO[0];
        return new Forward("success");
    }

    /**
     * @jpf:action
     * @jpf:catch type="Exception" method="exceptionHandler"
     * @jpf:forward name="success" path="acIrParaVisualizarCategoriaProduto.do"
     * @jpf:forward name="error" return-to="currentPage"
     */
    protected Forward acCadastrarCategoriaProduto() throws Exception
    {   
        if(!this.categoriaProdutoFormBean.getCategoriaProdutoVO().getNome_categoria_produto().trim().equals("")){
            this.categoriaProdutoFormBean.setCategoriaProdutoVO(this.jCSCategoriaProduto.atualizarCategoriaProduto(this.categoriaProdutoFormBean.getCategoriaProdutoVO(), this.listaSubCategoriaVO));
            
            return new Forward("success");
        }else{
            this.categoriaProdutoFormBean.setMensagem("Insira o nome do produto");
            return new Forward("error");
        }
        
    }
}