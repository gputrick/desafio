package desafio.categoriaProduto.manter;
import com.bea.wlw.netui.pageflow.FormData;
import com.bea.wlw.netui.pageflow.Forward;
import com.bea.wlw.netui.pageflow.PageFlowController;
import com.bea.wlw.netui.pageflow.PreviousPageInfo;
import com.bea.wlw.netui.tags.databinding.SortFilterService;
import com.bea.wlw.netui.tags.html.Exceptions;
import desafio.CategoriaProdutoVO;
import itaipu.util.exceptions.AppException;
import desafio.jcs.JCSCategoriaProduto;
import desafio.categoriaProduto.CategoriaProdutoFormBean;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.sql.RowSet;
import org.apache.struts.Globals;
import org.apache.struts.action.ActionForm;

/**
 * @jpf:controller nested="false"
 * @jpf:view-properties view-properties::
 * <!-- This data is auto-generated. Hand-editing this section is not recommended. -->
 * <view-properties>
 * <pageflow-object id="pageflow:/desafio/categoriaProduto/manter/JPFManterCategoriaProdutoController.jpf"/>
 * <pageflow-object id="action:begin.do">
 *   <property value="1040" name="x"/>
 *   <property value="260" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acPaginacaoCategoriaProduto.do">
 *   <property value="800" name="x"/>
 *   <property value="460" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acPaginacaoSubCategoria.do">
 *   <property value="2160" name="x"/>
 *   <property value="660" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acObterListaCategoriaProduto.do#desafio.categoriaProduto.CategoriaProdutoFormBean">
 *   <property value="960" name="x"/>
 *   <property value="560" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acEliminarCategoriaProduto.do">
 *   <property value="1080" name="x"/>
 *   <property value="460" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acSelecionaCategoriaProduto.do">
 *   <property value="2760" name="x"/>
 *   <property value="660" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acSelecionaSubCategoria.do">
 *   <property value="2560" name="x"/>
 *   <property value="660" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acIrParaVisualizarCategoriaProduto.do">
 *   <property value="2720" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acIrParaVisualizarCategoriaPai.do">
 *   <property value="2360" name="x"/>
 *   <property value="660" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acObterListaSubCategoria.do#desafio.categoriaProduto.CategoriaProdutoFormBean">
 *   <property value="1960" name="x"/>
 *   <property value="160" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acObterListaSubCategoriaVO.do#desafio.categoriaProduto.CategoriaProdutoFormBean">
 *   <property value="440" name="x"/>
 *   <property value="660" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acIrParaAlterarCategoriaProduto.do">
 *   <property value="2000" name="x"/>
 *   <property value="460" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acObterListaSubCategoriaPopup.do#desafio.categoriaProduto.CategoriaProdutoFormBean">
 *   <property value="1280" name="x"/>
 *   <property value="660" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acVoltarAPaginaAnterior.do">
 *   <property value="640" name="x"/>
 *   <property value="660" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acDesvincularSubCategoria.do">
 *   <property value="820" name="x"/>
 *   <property value="660" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acIrParaConsultarCategoriaProduto.do">
 *   <property value="1080" name="x"/>
 *   <property value="160" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acAbrirPopupVincularSubCategoria.do">
 *   <property value="1040" name="x"/>
 *   <property value="660" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acVinculaSubCategoria.do">
 *   <property value="1480" name="x"/>
 *   <property value="660" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acApagarMesagem.do">
 *   <property value="1640" name="x"/>
 *   <property value="660" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acFechaPopup.do">
 *   <property value="1780" name="x"/>
 *   <property value="660" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acAlterarCategoriaProduto.do">
 *   <property value="240" name="x"/>
 *   <property value="660" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acIrParaCadastrarCategoriaProduto.do">
 *   <property value="1300" name="x"/>
 *   <property value="460" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acCadastrarCategoriaProduto.do">
 *   <property value="1960" name="x"/>
 *   <property value="660" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarCategoriaProduto.jsp@#@action:acObterListaCategoriaProduto.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="989,989,971,971" name="elbowsX"/>
 *   <property value="404,460,460,517" name="elbowsY"/>
 *   <property value="South_0" name="fromPort"/>
 *   <property value="North_2" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarCategoriaProduto.jsp@#@action:acEliminarCategoriaProduto.do@">
 *   <property value="1011,1011,1080,1080" name="elbowsX"/>
 *   <property value="404,410,410,417" name="elbowsY"/>
 *   <property value="South_2" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarCategoriaProduto.jsp@#@action:acPaginacaoCategoriaProduto.do@">
 *   <property value="964,900,900,836" name="elbowsX"/>
 *   <property value="353,353,453,453" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarCategoriaProduto.jsp@#@action:acIrParaCadastrarCategoriaProduto.do@">
 *   <property value="1036,1150,1150,1264" name="elbowsX"/>
 *   <property value="353,353,453,453" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarCategoriaProduto.jsp@#@action:acIrParaAlterarCategoriaProduto.do@">
 *   <property value="1036,1500,1500,1964" name="elbowsX"/>
 *   <property value="364,364,453,453" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarCategoriaProduto.jsp@#@action:acSelecionaCategoriaProduto.do@">
 *   <property value="1036,1880,1880,2724" name="elbowsX"/>
 *   <property value="364,364,653,653" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="page:consultarCategoriaProduto.jsp">
 *   <property value="1000" name="x"/>
 *   <property value="360" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="page:../errorException.jsp">
 *   <property value="100" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarCategoriaProduto.jsp@#@action:acSelecionaSubCategoria.do@">
 *   <property value="1896,2210,2210,2524" name="elbowsX"/>
 *   <property value="53,53,653,653" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarCategoriaProduto.jsp@#@action:acIrParaVisualizarCategoriaPai.do@">
 *   <property value="1896,2110,2110,2324" name="elbowsX"/>
 *   <property value="53,53,653,653" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarCategoriaProduto.jsp@#@action:acIrParaAlterarCategoriaProduto.do@">
 *   <property value="1896,1930,1930,1964" name="elbowsX"/>
 *   <property value="42,42,453,453" name="elbowsY"/>
 *   <property value="East_0" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarCategoriaProduto.jsp@#@action:acPaginacaoSubCategoria.do@">
 *   <property value="1896,2010,2010,2124" name="elbowsX"/>
 *   <property value="53,53,642,642" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_0" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarCategoriaProduto.jsp@#@action:acEliminarCategoriaProduto.do@">
 *   <property value="1824,1470,1470,1116" name="elbowsX"/>
 *   <property value="53,53,453,453" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarCategoriaProduto.jsp@#@action:acObterListaSubCategoria.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="1860,1860,1892,1924" name="elbowsX"/>
 *   <property value="104,142,142,142" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="West_0" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarCategoriaProduto.jsp@#@action:acIrParaConsultarCategoriaProduto.do@">
 *   <property value="1824,1470,1470,1116" name="elbowsX"/>
 *   <property value="53,53,153,153" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="page:visualizarCategoriaProduto.jsp">
 *   <property value="1860" name="x"/>
 *   <property value="60" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarCategoriaProduto.jsp@#@action:acObterListaSubCategoriaVO.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="1144,810,810,476" name="elbowsX"/>
 *   <property value="564,564,653,653" name="elbowsY"/>
 *   <property value="West_2" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarCategoriaProduto.jsp@#@action:acVinculaSubCategoria.do@">
 *   <property value="1216,1330,1330,1444" name="elbowsX"/>
 *   <property value="553,553,653,653" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarCategoriaProduto.jsp@#@action:acAlterarCategoriaProduto.do@">
 *   <property value="1144,710,710,276" name="elbowsX"/>
 *   <property value="564,564,653,653" name="elbowsY"/>
 *   <property value="West_2" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarCategoriaProduto.jsp@#@action:acVoltarAPaginaAnterior.do@">
 *   <property value="1144,910,910,676" name="elbowsX"/>
 *   <property value="553,553,653,653" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarCategoriaProduto.jsp@#@action:acDesvincularSubCategoria.do@">
 *   <property value="1144,1000,1000,856" name="elbowsX"/>
 *   <property value="564,564,653,653" name="elbowsY"/>
 *   <property value="West_2" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarCategoriaProduto.jsp@#@action:acPaginacaoSubCategoria.do@">
 *   <property value="1216,1670,1670,2124" name="elbowsX"/>
 *   <property value="553,553,653,653" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarCategoriaProduto.jsp@#@action:acObterListaSubCategoriaPopup.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="1216,1280,1280,1280" name="elbowsX"/>
 *   <property value="564,564,590,617" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarCategoriaProduto.jsp@#@action:acApagarMesagem.do@">
 *   <property value="1216,1410,1410,1604" name="elbowsX"/>
 *   <property value="553,553,653,653" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarCategoriaProduto.jsp@#@action:acFechaPopup.do@">
 *   <property value="1216,1480,1480,1744" name="elbowsX"/>
 *   <property value="553,553,653,653" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarCategoriaProduto.jsp@#@action:acAbrirPopupVincularSubCategoria.do@">
 *   <property value="1144,1110,1110,1076" name="elbowsX"/>
 *   <property value="564,564,653,653" name="elbowsY"/>
 *   <property value="West_2" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="page:alterarCategoriaProduto.jsp">
 *   <property value="1180" name="x"/>
 *   <property value="560" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarCategoriaProduto.jsp@#@action:acCadastrarCategoriaProduto.do@">
 *   <property value="1436,1680,1680,1924" name="elbowsX"/>
 *   <property value="564,564,642,642" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="West_0" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarCategoriaProduto.jsp@#@action:acAbrirPopupVincularSubCategoria.do@">
 *   <property value="1364,1220,1220,1076" name="elbowsX"/>
 *   <property value="553,553,642,642" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_0" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarCategoriaProduto.jsp@#@action:acVinculaSubCategoria.do@">
 *   <property value="1436,1480,1480,1480" name="elbowsX"/>
 *   <property value="564,564,590,617" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarCategoriaProduto.jsp@#@action:acApagarMesagem.do@">
 *   <property value="1436,1520,1520,1604" name="elbowsX"/>
 *   <property value="564,564,642,642" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="West_0" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarCategoriaProduto.jsp@#@action:acFechaPopup.do@">
 *   <property value="1436,1590,1590,1744" name="elbowsX"/>
 *   <property value="553,553,642,642" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_0" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarCategoriaProduto.jsp@#@action:acObterListaSubCategoriaPopup.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="1364,1340,1340,1316" name="elbowsX"/>
 *   <property value="564,564,653,653" name="elbowsY"/>
 *   <property value="West_2" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarCategoriaProduto.jsp@#@action:acObterListaSubCategoriaVO.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="1364,920,920,476" name="elbowsX"/>
 *   <property value="564,564,653,653" name="elbowsY"/>
 *   <property value="West_2" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarCategoriaProduto.jsp@#@action:acDesvincularSubCategoria.do@">
 *   <property value="1364,1110,1110,856" name="elbowsX"/>
 *   <property value="564,564,653,653" name="elbowsY"/>
 *   <property value="West_2" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarCategoriaProduto.jsp@#@action:acVoltarAPaginaAnterior.do@">
 *   <property value="1364,1020,1020,676" name="elbowsX"/>
 *   <property value="564,564,642,642" name="elbowsY"/>
 *   <property value="West_2" name="fromPort"/>
 *   <property value="East_0" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarCategoriaProduto.jsp@#@action:acPaginacaoSubCategoria.do@">
 *   <property value="1436,1780,1780,2124" name="elbowsX"/>
 *   <property value="564,564,642,642" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="West_0" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="page:cadastrarCategoriaProduto.jsp">
 *   <property value="1400" name="x"/>
 *   <property value="560" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#consultarCategoriaProduto.jsp#@action:begin.do@">
 *   <property value="1004,1000,1000,1000" name="elbowsX"/>
 *   <property value="253,253,285,317" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acPaginacaoCategoriaProduto.do@@">
 *   <property value="800" name="x"/>
 *   <property value="560" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acPaginacaoCategoriaProduto.do@">
 *   <property value="800,800,800,800" name="elbowsX"/>
 *   <property value="504,510,510,517" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acPaginacaoSubCategoria.do@@">
 *   <property value="2160" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acPaginacaoSubCategoria.do@">
 *   <property value="2160,2160,2160,2160" name="elbowsX"/>
 *   <property value="704,710,710,717" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#consultarCategoriaProduto.jsp#@action:acObterListaCategoriaProduto.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="960,960,1000,1000" name="elbowsX"/>
 *   <property value="517,460,460,404" name="elbowsY"/>
 *   <property value="North_1" name="fromPort"/>
 *   <property value="South_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#acObterListaCategoriaProduto.do#@action:acEliminarCategoriaProduto.do@">
 *   <property value="1044,1020,1020,996" name="elbowsX"/>
 *   <property value="453,453,553,553" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#acIrParaVisualizarCategoriaProduto.do#@action:acSelecionaCategoriaProduto.do@">
 *   <property value="2760,2760,2720,2720" name="elbowsX"/>
 *   <property value="704,710,710,717" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#acIrParaVisualizarCategoriaProduto.do#@action:acSelecionaSubCategoria.do@">
 *   <property value="2596,2640,2640,2684" name="elbowsX"/>
 *   <property value="653,653,753,753" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#visualizarCategoriaProduto.jsp#@action:acIrParaVisualizarCategoriaProduto.do@">
 *   <property value="2684,2290,2290,1896" name="elbowsX"/>
 *   <property value="753,753,64,64" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_2" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#acIrParaVisualizarCategoriaProduto.do#@action:acIrParaVisualizarCategoriaPai.do@">
 *   <property value="2396,2540,2540,2684" name="elbowsX"/>
 *   <property value="653,653,753,753" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acObterListaSubCategoria.do#desafio.categoriaProduto.CategoriaProdutoFormBean@@">
 *   <property value="1920" name="x"/>
 *   <property value="260" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acObterListaSubCategoria.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="1960,1960,1920,1920" name="elbowsX"/>
 *   <property value="204,210,210,217" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acObterListaSubCategoriaVO.do#desafio.categoriaProduto.CategoriaProdutoFormBean@@">
 *   <property value="460" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acObterListaSubCategoriaVO.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="440,440,460,460" name="elbowsX"/>
 *   <property value="704,710,710,717" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#alterarCategoriaProduto.jsp#@action:acIrParaAlterarCategoriaProduto.do@">
 *   <property value="1964,1590,1590,1216" name="elbowsX"/>
 *   <property value="453,453,553,553" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acObterListaSubCategoriaPopup.do#desafio.categoriaProduto.CategoriaProdutoFormBean@@">
 *   <property value="1280" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acObterListaSubCategoriaPopup.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="1280,1280,1280,1280" name="elbowsX"/>
 *   <property value="704,710,710,717" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#previousPage#@action:acVoltarAPaginaAnterior.do@@">
 *   <property value="640" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#previousPage#@action:acVoltarAPaginaAnterior.do@">
 *   <property value="640,640,640,640" name="elbowsX"/>
 *   <property value="704,710,710,717" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acDesvincularSubCategoria.do@@">
 *   <property value="820" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acDesvincularSubCategoria.do@">
 *   <property value="820,820,820,820" name="elbowsX"/>
 *   <property value="704,710,710,717" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#begin.do#@action:acIrParaConsultarCategoriaProduto.do@">
 *   <property value="1080,1080,1078,1076" name="elbowsX"/>
 *   <property value="204,253,253,253" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acAbrirPopupVincularSubCategoria.do@@">
 *   <property value="1040" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acAbrirPopupVincularSubCategoria.do@">
 *   <property value="1040,1040,1040,1040" name="elbowsX"/>
 *   <property value="704,710,710,717" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acVinculaSubCategoria.do@@">
 *   <property value="1480" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acVinculaSubCategoria.do@">
 *   <property value="1480,1480,1480,1480" name="elbowsX"/>
 *   <property value="704,710,710,717" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acApagarMesagem.do@@">
 *   <property value="1660" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acApagarMesagem.do@">
 *   <property value="1640,1640,1660,1660" name="elbowsX"/>
 *   <property value="704,710,710,717" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acFechaPopup.do@@">
 *   <property value="1780" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acFechaPopup.do@">
 *   <property value="1780,1780,1780,1780" name="elbowsX"/>
 *   <property value="704,710,710,717" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#acIrParaVisualizarCategoriaProduto.do#@action:acAlterarCategoriaProduto.do@">
 *   <property value="276,1480,1480,2684" name="elbowsX"/>
 *   <property value="653,653,753,753" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#error#currentPage#@action:acAlterarCategoriaProduto.do@@">
 *   <property value="240" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#error#currentPage#@action:acAlterarCategoriaProduto.do@">
 *   <property value="240,240,240,240" name="elbowsX"/>
 *   <property value="704,710,710,717" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="error" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#cadastrarCategoriaProduto.jsp#@action:acIrParaCadastrarCategoriaProduto.do@">
 *   <property value="1300,1300,1400,1400" name="elbowsX"/>
 *   <property value="504,510,510,517" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#acIrParaVisualizarCategoriaProduto.do#@action:acCadastrarCategoriaProduto.do@">
 *   <property value="1996,2340,2340,2684" name="elbowsX"/>
 *   <property value="653,653,753,753" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#error#currentPage#@action:acCadastrarCategoriaProduto.do@@">
 *   <property value="2020" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#error#currentPage#@action:acCadastrarCategoriaProduto.do@">
 *   <property value="1960,1960,1972,1984" name="elbowsX"/>
 *   <property value="704,753,753,753" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="error" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="control:desafio.jcs.JCSCategoriaProduto#jCSCategoriaProduto">
 *   <property value="1900" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * </view-properties>
 * ::
 */
public class JPFManterCategoriaProdutoController extends PageFlowController {
	/**
	 * @common:control
	 */
	private JCSCategoriaProduto jCSCategoriaProduto;

	public CategoriaProdutoFormBean categoriaProdutoFormBean;

	public transient PreviousPageInfo currentPage;
	public transient SortFilterService sortFilterService;
	public transient SortFilterService sortFilterServiceObter;

	public transient RowSet listaCategoriaProduto;
	public transient String gridListaCategoriaProduto = "gridListaCategoriaProduto";

	public transient RowSet listaSubCategoria;
	public transient String gridListaSubCategoria = "gridListaSubCategoria";

	public transient CategoriaProdutoVO[] listaSubCategoriaVO;
	public transient Object listaSubCategoriaVOFiltrada;
	// Uncomment this declaration to access Global.app.
	//
	// protected global.Global globalApp;
	//

	// For an example of page flow exception handling see the example "catch"
	// and "exception-handler"
	// annotations in {project}/WEB-INF/src/global/Global.app

	/**
	 * Método de Entrada do pageFlow
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" path="consultarCategoriaProduto.jsp"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward begin() throws Exception {
		this.categoriaProdutoFormBean = new CategoriaProdutoFormBean();

		this.sortFilterService = SortFilterService.getInstance(getRequest());
		this.listaCategoriaProduto = this.jCSCategoriaProduto.obterListaCategoriaProduto(null,
				categoriaProdutoFormBean.getNomeCategoriaProdutoFiltro(),
				this.sortFilterService.getDatabaseFilter(this.gridListaCategoriaProduto));

		return new Forward("success", this.categoriaProdutoFormBean);
	}

	/**
	 * Action que gerencia a paginação da grid de lista de categoriaProduto
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" return-to="currentPage"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward acPaginacaoCategoriaProduto() {
		this.sortFilterService = SortFilterService.getInstance(getRequest());

		return new Forward("success");
	}

	/**
	 * Action que gerencia a paginação da lista de subcategorias
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" return-to="currentPage"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward acPaginacaoSubCategoria() {
		this.sortFilterService = SortFilterService.getInstance(getRequest());
		return new Forward("success");
	}

	/**
	 * Action que obtem a lista do tipo RowSet de todas as categoriaProduto com
	 * o filtro caso houver
	 * 
	 * @jpf:action
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 * @jpf:forward name="success" path="consultarCategoriaProduto.jsp"
	 */
	protected Forward acObterListaCategoriaProduto(CategoriaProdutoFormBean categoriaProdutoFormBean) throws Exception {
		this.sortFilterService = SortFilterService.getInstance(getRequest());
		this.listaCategoriaProduto = this.jCSCategoriaProduto.obterListaCategoriaProduto(null,
				categoriaProdutoFormBean.getNomeCategoriaProdutoFiltro(),
				this.sortFilterService.getDatabaseFilter(this.gridListaCategoriaProduto));

		return new Forward("success");
	}

	/**
	 * Action que exclui uma categoriaProduto
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" path="acObterListaCategoriaProduto.do"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward acEliminarCategoriaProduto() throws Exception {
		if (this.categoriaProdutoFormBean.getCategoriaProdutoVO().getId_categoria_produto() > 0) {
			this.jCSCategoriaProduto.eliminarCategoriaProduto(this.categoriaProdutoFormBean.getCategoriaProdutoVO());
		}
		return new Forward("success");
	}

	/**
	 * Action que e seleciona uma categoria produto dentro da lista
	 * categoriaProduto para visualizá-la
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" path="acIrParaVisualizarCategoriaProduto.do"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward acSelecionaCategoriaProduto() throws Exception {
		String id_categoria_produto = SortFilterService.decodeUniqueIdentifier(getRequest(),
				this.gridListaCategoriaProduto, "id_categoria_produto");
		if (id_categoria_produto != null) {
			this.categoriaProdutoFormBean.setCategoriaProdutoVO(new CategoriaProdutoVO());
			this.categoriaProdutoFormBean.getCategoriaProdutoVO()
					.setId_categoria_produto(Long.parseLong(id_categoria_produto));
		}
		return new Forward("success");
	}

	/**
	 * Action que e seleciona uma sub-categoria produto dentro da lista de
	 * sub-categorias para visualizá-la
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" path="acIrParaVisualizarCategoriaProduto.do"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward acSelecionaSubCategoria() throws Exception {
		String id_categoria_produto = SortFilterService.decodeUniqueIdentifier(getRequest(), this.gridListaSubCategoria,
				"id_categoria_produto");
		if (id_categoria_produto != null) {
			this.categoriaProdutoFormBean.setCategoriaProdutoVO(new CategoriaProdutoVO());
			this.categoriaProdutoFormBean.getCategoriaProdutoVO()
					.setId_categoria_produto(Long.parseLong(id_categoria_produto));
		}
		return new Forward("success");
	}

	/**
	 * Método que gerencia as exceções, chama a página errorException caso haja
	 * uma excessão
	 * 
	 * @jpf:exception-handler
	 * @jpf:forward name="errorPage" path="../errorException.jsp"
	 */
	protected Forward exceptionHandler(Exception ex, String actionName, String mesage, FormData form) {
		String displayMesage;
		if (AppException.isMensagemNegocio(ex)) {
			String keyError = AppException.obtemKeyErro(ex);
			ResourceBundle msgs;
			msgs = ResourceBundle.getBundle("msgs",
					(Locale) this.getRequest().getSession().getAttribute(Globals.LOCALE_KEY));
			displayMesage = "Erro: " + actionName + " - " + msgs.getString("MSG_ERROR_" + keyError);
			getRequest().setAttribute("errorMessage", displayMesage);
		} else {
			displayMesage = "Erro: " + actionName + " - " + ex.getMessage();
		}
		return new Forward("errorPage");
	}

	/**
	 * Action que obtem dos dados da categoriaProduto selecionada, seta o
	 * categoriaProdutoFormBean com estes dados para ir para a página de
	 * visualização de categoriaProduto
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" path="visualizarCategoriaProduto.jsp"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward acIrParaVisualizarCategoriaProduto() throws Exception {
		CategoriaProdutoVO categoriaProdutoVO = this.jCSCategoriaProduto
				.obterCategoriaProduto(this.categoriaProdutoFormBean.getCategoriaProdutoVO());

		CategoriaProdutoVO categoriaPaiVO = new CategoriaProdutoVO();
		if (categoriaProdutoVO.getId_categoria_pai() > 0) {
			categoriaPaiVO.setId_categoria_produto(categoriaProdutoVO.getId_categoria_pai());
			categoriaProdutoVO.setCategoriaPaiVO(this.jCSCategoriaProduto.obterCategoriaProduto(categoriaPaiVO));
		} else {
			categoriaPaiVO.setNome_categoria_produto("Não possui categoria pai.");
			categoriaProdutoVO.setCategoriaPaiVO(categoriaPaiVO);
		}

		this.sortFilterService = SortFilterService.getInstance(getRequest());
		this.listaSubCategoria = this.jCSCategoriaProduto.obterListaSubCategoria(categoriaProdutoVO, null,
				this.sortFilterService.getDatabaseFilter(this.gridListaSubCategoria));

		this.categoriaProdutoFormBean.setCategoriaProdutoVO(categoriaProdutoVO);

		return new Forward("success");
	}

	/**
	 * Action que entra quando uma categoriaPai é selecionada dentro do fluxo
	 * visualizar categoriaProduto, para obter as informações do pai e seta-las
	 * no categoriaProdutoFormBean
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" path="acIrParaVisualizarCategoriaProduto.do"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward acIrParaVisualizarCategoriaPai() throws Exception {
		if (this.categoriaProdutoFormBean.getCategoriaProdutoVO().getId_categoria_pai() > 0) {
			this.categoriaProdutoFormBean
					.setCategoriaProdutoVO(this.categoriaProdutoFormBean.getCategoriaProdutoVO().getCategoriaPaiVO());
		}
		return new Forward("success");
	}

	/**
	 * Action que obtem a lista de subCategorias do tipo RowSet pertencentes à
	 * categoriaProduto atual filtradas caso houver filtro para o componente
	 * grid da interface
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" return-to="currentPage"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward acObterListaSubCategoria(CategoriaProdutoFormBean categoriaProdutoFormBean) throws Exception {
		this.sortFilterService = SortFilterService.getInstance(getRequest());
		this.listaSubCategoria = this.jCSCategoriaProduto.obterListaSubCategoria(
				this.categoriaProdutoFormBean.getCategoriaProdutoVO(),
				categoriaProdutoFormBean.getNomeCategoriaProdutoFiltro(),
				this.sortFilterService.getDatabaseFilter(this.gridListaSubCategoria));

		return new Forward("success");
	}

	/**
	 * Action que obtém a lista de subCategorias do tipo VO[] pertencentes à
	 * categoriaProduto atual filtradas caso houver filtro para o componente
	 * repeater da interface
	 * 
	 * @jpf:action
	 * @jpf:forward return-to="currentPage" name="success"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward acObterListaSubCategoriaVO(CategoriaProdutoFormBean categoriaProdutoFormBean) throws Exception {
		if (categoriaProdutoFormBean.getNomeCategoriaProdutoFiltro().trim().equals("")) {
			this.listaSubCategoriaVOFiltrada = this.listaSubCategoriaVO;
		} else {
			ArrayList listaSubCategoriaVODinamica = new ArrayList();

			for (int i = 0; i < this.listaSubCategoriaVO.length; i++) {
				if ((this.listaSubCategoriaVO[i].getNome_categoria_produto().toUpperCase()
						.indexOf(categoriaProdutoFormBean.getNomeCategoriaProdutoFiltro().trim().toUpperCase())) >= 0) {
					listaSubCategoriaVODinamica.add(this.listaSubCategoriaVO[i]);
				}
			}
			this.listaSubCategoriaVOFiltrada = listaSubCategoriaVODinamica.toArray();
		}

		return new Forward("success");
	}

	/**
	 * Action que obtem todos os dados de categoriaProduto para ir para a pagina
	 * alterarCategoriaProduto
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" path="alterarCategoriaProduto.jsp"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward acIrParaAlterarCategoriaProduto() throws Exception {

		String id_categoria_produto = SortFilterService.decodeUniqueIdentifier(getRequest(),
				this.gridListaCategoriaProduto, "id_categoria_produto");

		if (id_categoria_produto != null) {
			CategoriaProdutoVO categoriaProdutoVO = new CategoriaProdutoVO();
			categoriaProdutoVO.setId_categoria_produto(Long.parseLong(id_categoria_produto));
			categoriaProdutoVO = this.jCSCategoriaProduto.obterCategoriaProduto(categoriaProdutoVO);

			CategoriaProdutoVO categoriaPaiVO = new CategoriaProdutoVO();
			if (categoriaProdutoVO.getId_categoria_pai() > 0) {
				categoriaPaiVO.setId_categoria_produto(categoriaProdutoVO.getId_categoria_pai());
				categoriaProdutoVO.setCategoriaPaiVO(this.jCSCategoriaProduto.obterCategoriaProduto(categoriaPaiVO));
			} else {
				categoriaPaiVO.setNome_categoria_produto("Não possui categoria pai.");
				categoriaProdutoVO.setCategoriaPaiVO(categoriaPaiVO);
			}
			this.categoriaProdutoFormBean.setCategoriaProdutoVO(categoriaProdutoVO);
		}

		this.sortFilterService = SortFilterService.getInstance(getRequest());
		this.listaSubCategoriaVO = this.jCSCategoriaProduto
				.obterListaCategoriaProdutoPorCategoriaPai(this.categoriaProdutoFormBean.getCategoriaProdutoVO());
		this.listaSubCategoriaVOFiltrada = this.listaSubCategoriaVO;

		return new Forward("success");
	}

	/**
	 * Action que obtem a lista de subCategorias para o popup vincular
	 * SubCategoria
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" return-to="currentPage"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward acObterListaSubCategoriaPopup(CategoriaProdutoFormBean categoriaProdutoFormBean)
			throws Exception {

		this.sortFilterService = SortFilterService.getInstance(getRequest());
		this.listaSubCategoria = this.jCSCategoriaProduto.obterListaCategoriaProduto(null,
				categoriaProdutoFormBean.getNomeCategoriaProdutoFiltroPopup(),
				this.sortFilterService.getDatabaseFilter(this.gridListaCategoriaProduto));

		return new Forward("success");
	}

	/**
	 * Action que volta para página anterior
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" return-to="previousPage"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward acVoltarAPaginaAnterior() {
		return new Forward("success");
	}

	/**
	 * Action que desvincula temporariamente o VO da lista de subcategoriasVO
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" return-to="currentPage"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward acDesvincularSubCategoria() throws Exception {
		CategoriaProdutoVO[] listaSubCategoriaVO = new CategoriaProdutoVO[this.listaSubCategoriaVO.length - 1];
		int j = 0;
		for (int i = 0; i < this.listaSubCategoriaVO.length; i++) {
			if (this.categoriaProdutoFormBean.getIdCategoriaProdutoFiltro() != this.listaSubCategoriaVO[i]
					.getId_categoria_produto()) {
				listaSubCategoriaVO[j++] = this.listaSubCategoriaVO[i];
			}
		}
		this.listaSubCategoriaVO = listaSubCategoriaVO;
		this.listaSubCategoriaVOFiltrada = listaSubCategoriaVO;
		return new Forward("success");
	}

	/**
	 * Action que volta para o begin, para que o fluxo vá para a pagina
	 * consultarCategoriaProduto
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" path="begin.do"
	 */
	protected Forward acIrParaConsultarCategoriaProduto() {
		return new Forward("success");
	}

	/**
	 * Action que otém a lista de todas as categorias e abre o popup com esta
	 * lista para vincula-las à categoriaProduto atual
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" return-to="currentPage"
	 */
	protected Forward acAbrirPopupVincularSubCategoria() throws Exception {
		this.sortFilterService = SortFilterService.getInstance(getRequest());
		this.listaSubCategoria = this.jCSCategoriaProduto.obterListaCategoriaProduto(null, null,
				this.sortFilterService.getDatabaseFilter(this.gridListaCategoriaProduto));
		this.categoriaProdutoFormBean.setDisplayPopup("block");
		return new Forward("success");
	}

	/**
	 * Action que verifica as condições da sub-categoria em caso de sucesso
	 * vincula temporariamente o VO da SubCategoria à categoriaProduto atual
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" return-to="currentPage"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward acVinculaSubCategoria() throws Exception {
		long id_categoria_produto = Long.parseLong(SortFilterService.decodeUniqueIdentifier(getRequest(),
				this.gridListaSubCategoria, "id_categoria_produto"));

		boolean categoriaJaVinculada = false;

		if (id_categoria_produto == categoriaProdutoFormBean.getCategoriaProdutoVO().getId_categoria_produto()) {
			this.categoriaProdutoFormBean.setMensagem("Uma categoria não pode ser vinculada com ela mesma!");
			return new Forward("success");
		}

		CategoriaProdutoVO categoriaProdutoVO = new CategoriaProdutoVO();
		categoriaProdutoVO.setId_categoria_produto(id_categoria_produto);
		categoriaProdutoVO = this.jCSCategoriaProduto.obterCategoriaProduto(categoriaProdutoVO);
		CategoriaProdutoVO[] listaVerificaSubCategoria = this.jCSCategoriaProduto
				.obterListaCategoriaProdutoPorCategoriaPai(categoriaProdutoVO);

		if (listaVerificaSubCategoria.length > 0) {
			this.categoriaProdutoFormBean.setMensagem(
					"Esta categoria já possui outras sub-categorias. Só é permitido o vínculo de categorias que não possuem sub-categorias.");
			return new Forward("success");
		}

		for (int i = 0; i < this.listaSubCategoriaVO.length; i++) {
			if (id_categoria_produto == this.listaSubCategoriaVO[i].getId_categoria_produto()) {
				categoriaJaVinculada = true;
				this.categoriaProdutoFormBean.setMensagem("Sub-categoria já vinculada!");
				break;
			}
		}

		if (!categoriaJaVinculada) {

			CategoriaProdutoVO[] listaSubCategoriaVO = new CategoriaProdutoVO[this.listaSubCategoriaVO.length + 1];
			for (int j = 0; j < this.listaSubCategoriaVO.length; j++) {
				listaSubCategoriaVO[j] = this.listaSubCategoriaVO[j];
			}
			listaSubCategoriaVO[this.listaSubCategoriaVO.length] = categoriaProdutoVO;

			this.listaSubCategoriaVO = listaSubCategoriaVO;
			this.listaSubCategoriaVOFiltrada = this.listaSubCategoriaVO;
			this.categoriaProdutoFormBean.setDisplayPopup("none");
		}
		return new Forward("success");
	}

	/**
	 * Action que apaga a mensagem da interface, pois caso a mesagem seja nula,
	 * não será exibida na inicialização da página, alterar ou cadastrar
	 * categoriaProduto
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" return-to="currentPage"
	 */
	protected Forward acApagarMesagem() {
		this.categoriaProdutoFormBean.setMensagem(null);
		return new Forward("success");
	}

	/**
	 * Action que seta o display do popUp para none, que no caso deixa-o
	 * invisível
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" return-to="currentPage"
	 */
	protected Forward acFechaPopup() {
		this.categoriaProdutoFormBean.setDisplayPopup("none");
		return new Forward("success");
	}

	/**
	 * Action que confirma as alterações da categoriaProduto e torna-os
	 * persistentes
	 * 
	 * @jpf:action
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 * @jpf:forward name="success" path="acIrParaVisualizarCategoriaProduto.do"
	 * @jpf:forward name="error" return-to="currentPage"
	 */
	protected Forward acAlterarCategoriaProduto() throws Exception {
		if (!this.categoriaProdutoFormBean.getCategoriaProdutoVO().getNome_categoria_produto().trim().equals("")) {
			CategoriaProdutoVO categoriaProdutoVO = this.categoriaProdutoFormBean.getCategoriaProdutoVO();
			this.jCSCategoriaProduto.atualizarCategoriaProduto(categoriaProdutoVO, this.listaSubCategoriaVO);
			return new Forward("success");
		} else {
			this.categoriaProdutoFormBean.setMensagem("Insira o nome da categoria");
			return new Forward("error");
		}
	}

	/**
	 * Action que nula as informações de categoriaProdutoFormBean para ir para a
	 * página cadastrarCategoriaProduto
	 * 
	 * @jpf:action
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 * @jpf:forward name="success" path="cadastrarCategoriaProduto.jsp"
	 */
	protected Forward acIrParaCadastrarCategoriaProduto() {
		this.categoriaProdutoFormBean = new CategoriaProdutoFormBean();
		this.listaSubCategoriaVO = new CategoriaProdutoVO[0];
		this.listaSubCategoriaVOFiltrada = new CategoriaProdutoVO[0];
		return new Forward("success");
	}

	/**
	 * Action que confirma as alterarções de categoriaProduto a ser cadastrado e
	 * torna o objeto persistente com a lista de subcategorias
	 * 
	 * @jpf:action
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 * @jpf:forward name="success" path="acIrParaVisualizarCategoriaProduto.do"
	 * @jpf:forward name="error" return-to="currentPage"
	 */
	protected Forward acCadastrarCategoriaProduto() throws Exception {
		if (!this.categoriaProdutoFormBean.getCategoriaProdutoVO().getNome_categoria_produto().trim().equals("")) {
			this.categoriaProdutoFormBean.setCategoriaProdutoVO(this.jCSCategoriaProduto.atualizarCategoriaProduto(
					this.categoriaProdutoFormBean.getCategoriaProdutoVO(), this.listaSubCategoriaVO));

			return new Forward("success");
		} else {
			this.categoriaProdutoFormBean.setMensagem("Insira o nome do produto");
			return new Forward("error");
		}

	}
}