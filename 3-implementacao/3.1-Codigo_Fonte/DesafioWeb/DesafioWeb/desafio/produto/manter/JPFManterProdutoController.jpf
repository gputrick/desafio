package desafio.produto.manter;
import com.bea.wlw.netui.pageflow.FormData;
import com.bea.wlw.netui.pageflow.Forward;
import com.bea.wlw.netui.pageflow.PageFlowController;
import com.bea.wlw.netui.pageflow.PreviousPageInfo;
import com.bea.wlw.netui.tags.databinding.SortFilterService;
import com.bea.wlw.netui.tags.html.Exceptions;
import desafio.CategoriaProdutoVO;
import desafio.ProdutoCategoriaProdutoVO;
import itaipu.util.exceptions.AppException;
import desafio.ProdutoVO;
import desafio.jcs.JCSCategoriaProduto;
import desafio.jcs.JCSProduto;
import desafio.jcs.JCSProdutoImpl;
import desafio.categoriaProduto.CategoriaProdutoFormBean;
import desafio.produto.ProdutoFormBean;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.sql.RowSet;
import org.apache.struts.Globals;
import org.apache.struts.action.ActionForm;

/**
 * @jpf:controller nested="false"
 * @jpf:view-properties view-properties::
 * <!-- This data is auto-generated. Hand-editing this section is not recommended. -->
 * <view-properties>
 * <pageflow-object id="pageflow:/desafio/produto/manter/JPFManterProdutoController.jpf"/>
 * <pageflow-object id="action:begin.do">
 *   <property value="240" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acPaginacaoProduto.do">
 *   <property value="80" name="x"/>
 *   <property value="160" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acPaginacaoCategoriaProduto.do">
 *   <property value="880" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acObterListaProduto.do#desafio.produto.ProdutoFormBean">
 *   <property value="800" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acEliminarProduto.do">
 *   <property value="700" name="x"/>
 *   <property value="660" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acSelecionaProduto.do">
 *   <property value="140" name="x"/>
 *   <property value="360" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acIrParaVisualizarProduto.do">
 *   <property value="120" name="x"/>
 *   <property value="460" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acObterListaCategoriaProduto.do#desafio.categoriaProduto.CategoriaProdutoFormBean">
 *   <property value="240" name="x"/>
 *   <property value="560" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acObterListaCategoriaProdutoVO.do#desafio.categoriaProduto.CategoriaProdutoFormBean">
 *   <property value="1100" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acIrParaAlterarProduto.do">
 *   <property value="900" name="x"/>
 *   <property value="660" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acObterListaCategoriaProdutoPopup.do#desafio.categoriaProduto.CategoriaProdutoFormBean">
 *   <property value="1040" name="x"/>
 *   <property value="420" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acVoltarAPaginaAnterior.do">
 *   <property value="2000" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acDesvincularCategoriaProduto.do">
 *   <property value="1580" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acIrParaConsultarProduto.do">
 *   <property value="520" name="x"/>
 *   <property value="660" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acAbrirPopupVincularCategoria.do">
 *   <property value="1800" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acVinculaCategoriaProduto.do">
 *   <property value="540" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acApagarMesagem.do">
 *   <property value="380" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acFechaPopup.do">
 *   <property value="2160" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acAlterarProduto.do">
 *   <property value="140" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acIrParaCadastrarProduto.do">
 *   <property value="1340" name="x"/>
 *   <property value="160" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acCadastrarProduto.do">
 *   <property value="320" name="x"/>
 *   <property value="360" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarProduto.jsp@#@action:acObterListaProduto.do#desafio.produto.ProdutoFormBean@">
 *   <property value="736,750,750,764" name="elbowsX"/>
 *   <property value="64,64,742,742" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="West_0" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarProduto.jsp@#@action:acPaginacaoProduto.do@">
 *   <property value="664,390,390,116" name="elbowsX"/>
 *   <property value="53,53,153,153" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarProduto.jsp@#@action:acEliminarProduto.do@">
 *   <property value="700,700,700,700" name="elbowsX"/>
 *   <property value="104,360,360,617" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarProduto.jsp@#@action:acSelecionaProduto.do@">
 *   <property value="664,420,420,176" name="elbowsX"/>
 *   <property value="64,64,353,353" name="elbowsY"/>
 *   <property value="West_2" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarProduto.jsp@#@action:acIrParaAlterarProduto.do@">
 *   <property value="736,800,800,864" name="elbowsX"/>
 *   <property value="64,64,653,653" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="page:consultarProduto.jsp">
 *   <property value="700" name="x"/>
 *   <property value="60" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="page:../errorException.jsp">
 *   <property value="220" name="x"/>
 *   <property value="960" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarProduto.jsp@#@action:acEliminarProduto.do@">
 *   <property value="576,620,620,664" name="elbowsX"/>
 *   <property value="564,564,653,653" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarProduto.jsp@#@action:acPaginacaoCategoriaProduto.do@">
 *   <property value="576,710,710,844" name="elbowsX"/>
 *   <property value="564,564,842,842" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="West_0" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarProduto.jsp@#@action:acIrParaConsultarProduto.do@">
 *   <property value="540,540,520,520" name="elbowsX"/>
 *   <property value="604,610,610,617" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarProduto.jsp@#@action:acObterListaCategoriaProduto.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="504,390,390,276" name="elbowsX"/>
 *   <property value="553,553,553,553" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarProduto.jsp@#@action:acIrParaAlterarProduto.do@">
 *   <property value="576,720,720,864" name="elbowsX"/>
 *   <property value="553,553,642,642" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_0" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="page:visualizarProduto.jsp">
 *   <property value="540" name="x"/>
 *   <property value="560" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarProduto.jsp@#@action:acVinculaCategoriaProduto.do@">
 *   <property value="1024,800,800,576" name="elbowsX"/>
 *   <property value="742,742,853,853" name="elbowsY"/>
 *   <property value="West_0" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarProduto.jsp@#@action:acAbrirPopupVincularCategoria.do@">
 *   <property value="1096,1430,1430,1764" name="elbowsX"/>
 *   <property value="753,753,853,853" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarProduto.jsp@#@action:acAlterarProduto.do@">
 *   <property value="1024,600,600,176" name="elbowsX"/>
 *   <property value="742,742,853,853" name="elbowsY"/>
 *   <property value="West_0" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarProduto.jsp@#@action:acVoltarAPaginaAnterior.do@">
 *   <property value="1096,1530,1530,1964" name="elbowsX"/>
 *   <property value="753,753,853,853" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarProduto.jsp@#@action:acDesvincularCategoriaProduto.do@">
 *   <property value="1096,1320,1320,1544" name="elbowsX"/>
 *   <property value="753,753,853,853" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarProduto.jsp@#@action:acFechaPopup.do@">
 *   <property value="1096,1610,1610,2124" name="elbowsX"/>
 *   <property value="753,753,853,853" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarProduto.jsp@#@action:acObterListaCategoriaProdutoPopup.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="1060,1060,1040,1040" name="elbowsX"/>
 *   <property value="717,590,590,464" name="elbowsY"/>
 *   <property value="North_1" name="fromPort"/>
 *   <property value="South_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarProduto.jsp@#@action:acObterListaCategoriaProdutoVO.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="1060,1060,1100,1100" name="elbowsX"/>
 *   <property value="804,810,810,817" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarProduto.jsp@#@action:acPaginacaoCategoriaProduto.do@">
 *   <property value="1024,970,970,916" name="elbowsX"/>
 *   <property value="742,742,853,853" name="elbowsY"/>
 *   <property value="West_0" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarProduto.jsp@#@action:acApagarMesagem.do@">
 *   <property value="1024,720,720,416" name="elbowsX"/>
 *   <property value="742,742,853,853" name="elbowsY"/>
 *   <property value="West_0" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="page:alterarProduto.jsp">
 *   <property value="1060" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarProduto.jsp@#@action:acObterListaCategoriaProdutoPopup.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="1304,1190,1190,1076" name="elbowsX"/>
 *   <property value="253,253,413,413" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarProduto.jsp@#@action:acApagarMesagem.do@">
 *   <property value="1304,860,860,416" name="elbowsX"/>
 *   <property value="264,264,853,853" name="elbowsY"/>
 *   <property value="West_2" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarProduto.jsp@#@action:acAbrirPopupVincularCategoria.do@">
 *   <property value="1376,1570,1570,1764" name="elbowsX"/>
 *   <property value="264,264,842,842" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="West_0" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarProduto.jsp@#@action:acVinculaCategoriaProduto.do@">
 *   <property value="1304,940,940,576" name="elbowsX"/>
 *   <property value="264,264,853,853" name="elbowsY"/>
 *   <property value="West_2" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarProduto.jsp@#@action:acObterListaCategoriaProdutoVO.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="1304,1220,1220,1136" name="elbowsX"/>
 *   <property value="264,264,853,853" name="elbowsY"/>
 *   <property value="West_2" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarProduto.jsp@#@action:acVoltarAPaginaAnterior.do@">
 *   <property value="1376,1670,1670,1964" name="elbowsX"/>
 *   <property value="264,264,853,853" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarProduto.jsp@#@action:acCadastrarProduto.do@">
 *   <property value="1304,830,830,356" name="elbowsX"/>
 *   <property value="253,253,353,353" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarProduto.jsp@#@action:acFechaPopup.do@">
 *   <property value="1376,1750,1750,2124" name="elbowsX"/>
 *   <property value="253,253,842,842" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_0" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarProduto.jsp@#@action:acPaginacaoCategoriaProduto.do@">
 *   <property value="1304,1110,1110,916" name="elbowsX"/>
 *   <property value="264,264,853,853" name="elbowsY"/>
 *   <property value="West_2" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarProduto.jsp@#@action:acDesvincularCategoriaProduto.do@">
 *   <property value="1376,1460,1460,1544" name="elbowsX"/>
 *   <property value="264,264,842,842" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="West_0" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="page:cadastrarProduto.jsp">
 *   <property value="1340" name="x"/>
 *   <property value="260" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#consultarProduto.jsp#@action:begin.do@">
 *   <property value="276,470,470,664" name="elbowsX"/>
 *   <property value="742,742,64,64" name="elbowsY"/>
 *   <property value="East_0" name="fromPort"/>
 *   <property value="West_2" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acPaginacaoProduto.do@@">
 *   <property value="80" name="x"/>
 *   <property value="260" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acPaginacaoProduto.do@">
 *   <property value="80,80,80,80" name="elbowsX"/>
 *   <property value="204,210,210,217" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acPaginacaoCategoriaProduto.do@@">
 *   <property value="880" name="x"/>
 *   <property value="960" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acPaginacaoCategoriaProduto.do@">
 *   <property value="880,880,880,880" name="elbowsX"/>
 *   <property value="904,910,910,917" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#consultarProduto.jsp#@action:acObterListaProduto.do#desafio.produto.ProdutoFormBean@">
 *   <property value="764,750,750,736" name="elbowsX"/>
 *   <property value="742,742,64,64" name="elbowsY"/>
 *   <property value="West_0" name="fromPort"/>
 *   <property value="East_2" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#acObterListaProduto.do#@action:acEliminarProduto.do@">
 *   <property value="736,750,750,764" name="elbowsX"/>
 *   <property value="642,642,753,753" name="elbowsY"/>
 *   <property value="East_0" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#acIrParaVisualizarProduto.do#@action:acSelecionaProduto.do@">
 *   <property value="140,140,120,120" name="elbowsX"/>
 *   <property value="404,410,410,417" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#visualizarProduto.jsp#@action:acIrParaVisualizarProduto.do@">
 *   <property value="156,330,330,504" name="elbowsX"/>
 *   <property value="464,464,553,553" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#visualizarProduto.jsp#@action:acObterListaCategoriaProduto.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="276,390,390,504" name="elbowsX"/>
 *   <property value="553,553,553,553" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acObterListaCategoriaProdutoVO.do#desafio.categoriaProduto.CategoriaProdutoFormBean@@">
 *   <property value="1100" name="x"/>
 *   <property value="960" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acObterListaCategoriaProdutoVO.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="1100,1100,1100,1100" name="elbowsX"/>
 *   <property value="904,910,910,917" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#alterarProduto.jsp#@action:acIrParaAlterarProduto.do@">
 *   <property value="936,980,980,1024" name="elbowsX"/>
 *   <property value="653,653,753,753" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acObterListaCategoriaProdutoPopup.do#desafio.categoriaProduto.CategoriaProdutoFormBean@@">
 *   <property value="1340" name="x"/>
 *   <property value="960" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acObterListaCategoriaProdutoPopup.do#desafio.categoriaProduto.CategoriaProdutoFormBean@">
 *   <property value="1076,1190,1190,1304" name="elbowsX"/>
 *   <property value="413,413,953,953" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#previousPage#@action:acVoltarAPaginaAnterior.do@@">
 *   <property value="2000" name="x"/>
 *   <property value="960" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#previousPage#@action:acVoltarAPaginaAnterior.do@">
 *   <property value="2000,2000,2000,2000" name="elbowsX"/>
 *   <property value="904,910,910,917" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acDesvincularCategoriaProduto.do@@">
 *   <property value="1620" name="x"/>
 *   <property value="960" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acDesvincularCategoriaProduto.do@">
 *   <property value="1580,1580,1582,1584" name="elbowsX"/>
 *   <property value="904,953,953,953" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#begin.do#@action:acIrParaConsultarProduto.do@">
 *   <property value="484,380,380,276" name="elbowsX"/>
 *   <property value="653,653,753,753" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acAbrirPopupVincularCategoria.do@@">
 *   <property value="1800" name="x"/>
 *   <property value="960" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acAbrirPopupVincularCategoria.do@">
 *   <property value="1800,1800,1800,1800" name="elbowsX"/>
 *   <property value="904,910,910,917" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acVinculaCategoriaProduto.do@@">
 *   <property value="600" name="x"/>
 *   <property value="960" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acVinculaCategoriaProduto.do@">
 *   <property value="540,540,552,564" name="elbowsX"/>
 *   <property value="904,953,953,953" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acApagarMesagem.do@@">
 *   <property value="360" name="x"/>
 *   <property value="960" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acApagarMesagem.do@">
 *   <property value="380,380,360,360" name="elbowsX"/>
 *   <property value="904,910,910,917" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acFechaPopup.do@@">
 *   <property value="2160" name="x"/>
 *   <property value="960" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acFechaPopup.do@">
 *   <property value="2160,2160,2160,2160" name="elbowsX"/>
 *   <property value="904,910,910,917" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#acIrParaVisualizarProduto.do#@action:acAlterarProduto.do@">
 *   <property value="140,140,120,120" name="elbowsX"/>
 *   <property value="817,660,660,504" name="elbowsY"/>
 *   <property value="North_1" name="fromPort"/>
 *   <property value="South_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#error#currentPage#@action:acAlterarProduto.do@@">
 *   <property value="80" name="x"/>
 *   <property value="960" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#error#currentPage#@action:acAlterarProduto.do@">
 *   <property value="140,140,128,116" name="elbowsX"/>
 *   <property value="904,953,953,953" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 *   <property value="error" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#cadastrarProduto.jsp#@action:acIrParaCadastrarProduto.do@">
 *   <property value="1340,1340,1340,1340" name="elbowsX"/>
 *   <property value="204,210,210,217" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#acIrParaVisualizarProduto.do#@action:acCadastrarProduto.do@">
 *   <property value="284,220,220,156" name="elbowsX"/>
 *   <property value="353,353,453,453" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#error#currentPage#@action:acCadastrarProduto.do@@">
 *   <property value="320" name="x"/>
 *   <property value="460" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#error#currentPage#@action:acCadastrarProduto.do@">
 *   <property value="320,320,320,320" name="elbowsX"/>
 *   <property value="404,410,410,417" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="error" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="control:desafio.jcs.JCSProduto#jCSProduto">
 *   <property value="700" name="x"/>
 *   <property value="960" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="control:desafio.jcs.JCSCategoriaProduto#jCSCategoriaProduto">
 *   <property value="480" name="x"/>
 *   <property value="960" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarProduto.jsp@#@action:acIrParaCadastrarProduto.do@">
 *   <property value="736,1020,1020,1304" name="elbowsX"/>
 *   <property value="53,53,153,153" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * </view-properties>
 * ::
 */
public class JPFManterProdutoController extends PageFlowController {
	/**
	 * @common:control
	 */
	private JCSProduto jCSProduto;

	/**
	 * @common:control
	 */
	private JCSCategoriaProduto jCSCategoriaProduto;

	public ProdutoFormBean produtoFormBean;
	public CategoriaProdutoFormBean categoriaProdutoFormBean;

	public transient PreviousPageInfo currentPage;
	public transient SortFilterService sortFilterService;
	public transient SortFilterService sortFilterServiceObter;

	public transient RowSet listaProduto;
	public transient String gridListaProduto = "gridListaProduto";

	public transient RowSet listaCategoriaProduto;
	public transient String gridListaCategoriaProduto = "gridListaCategoriaProduto";

	public transient CategoriaProdutoVO[] listaCategoriaProdutoVO;
	public transient Object listaCategoriaProdutoVOFiltrada;
	// Uncomment this declaration to access Global.app.
	//
	// protected global.Global globalApp;
	//

	// For an example of page flow exception handling see the example "catch"
	// and "exception-handler"
	// annotations in {project}/WEB-INF/src/global/Global.app

	/**
	 * Método de Entrada do pageFlow
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" path="consultarProduto.jsp"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward begin() throws Exception {
		this.produtoFormBean = new ProdutoFormBean();

		this.categoriaProdutoFormBean = new CategoriaProdutoFormBean();

		this.sortFilterService = SortFilterService.getInstance(getRequest());
		this.listaProduto = this.jCSProduto.obterListaProduto(null, produtoFormBean.getNomeProdutoFiltro(),
				this.sortFilterService.getDatabaseFilter(this.gridListaProduto));

		return new Forward("success", this.produtoFormBean);
	}

	/**
	 * Action que gerencia a paginação da grid de lista de produto
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" return-to="currentPage"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward acPaginacaoProduto() {
		this.sortFilterService = SortFilterService.getInstance(getRequest());

		return new Forward("success");
	}

	/**
	 * Action que gerencia a paginação da grid de lista de categoriaProduto
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" return-to="currentPage"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward acPaginacaoCategoriaProduto() {
		this.sortFilterService = SortFilterService.getInstance(getRequest());

		return new Forward("success");
	}

	/**
	 * Action que obtem a lista do tipo RowSet de todas os Produtos com o filtro
	 * caso houver
	 * 
	 * @jpf:action
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 * @jpf:forward name="success" path="consultarProduto.jsp"
	 */
	protected Forward acObterListaProduto(ProdutoFormBean produtoFormBean) throws Exception {
		this.sortFilterService = SortFilterService.getInstance(getRequest());
		this.listaProduto = this.jCSProduto.obterListaProduto(null, produtoFormBean.getNomeProdutoFiltro(),
				this.sortFilterService.getDatabaseFilter(this.gridListaProduto));

		return new Forward("success");
	}

	/**
	 * Action que exclui um produto
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" path="acObterListaProduto.do"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward acEliminarProduto() throws Exception {
		if (this.produtoFormBean.getProdutoVO().getId_produto() > 0) {
			this.jCSProduto.eliminarProduto(this.produtoFormBean.getProdutoVO());
		}
		return new Forward("success");
	}

	/**
	 * Action que e seleciona um produto dentro da lista produto para
	 * visualizá-lo
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" path="acIrParaVisualizarProduto.do"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward acSelecionaProduto() throws Exception {
		String id_produto = SortFilterService.decodeUniqueIdentifier(getRequest(), this.gridListaProduto, "id_produto");
		if (id_produto != null) {
			this.produtoFormBean.setProdutoVO(new ProdutoVO());
			this.produtoFormBean.getProdutoVO().setId_produto(Long.parseLong(id_produto));
		}
		return new Forward("success");
	}

	/**
	 * Método que gerencia as exceções, chama a página errorException caso haja
	 * uma excessão
	 * 
	 * @jpf:exception-handler
	 * @jpf:forward name="errorPage" path="../errorException.jsp"
	 */
	protected Forward exceptionHandler(Exception ex, String actionName, String mesage, FormData form) {
		String displayMesage;
		if (AppException.isMensagemNegocio(ex)) {
			String keyError = AppException.obtemKeyErro(ex);
			ResourceBundle msgs;
			msgs = ResourceBundle.getBundle("msgs",
					(Locale) this.getRequest().getSession().getAttribute(Globals.LOCALE_KEY));
			displayMesage = "Erro: " + actionName + " - " + msgs.getString("MSG_ERROR_" + keyError);
			getRequest().setAttribute("errorMessage", displayMesage);
		} else {
			displayMesage = "Erro: " + actionName + " - " + ex.getMessage();
		}
		return new Forward("errorPage");
	}

	/**
	 * Action que obtem dos dados do produto selecionada, seta o podutoFormBean
	 * com estes dados para ir para a página de visualização de produto
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" path="visualizarProduto.jsp"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward acIrParaVisualizarProduto() throws Exception {
		this.produtoFormBean.setProdutoVO(this.jCSProduto.obterProduto(this.produtoFormBean.getProdutoVO()));

		this.sortFilterService = SortFilterService.getInstance(getRequest());
		this.listaCategoriaProduto = this.jCSCategoriaProduto.obterListaCategoriaProduto(
				this.produtoFormBean.getProdutoVO(), null,
				this.sortFilterService.getDatabaseFilter(this.gridListaCategoriaProduto));

		return new Forward("success");
	}

	/**
	 * Action que obtem a lista de categoriaProduto do tipo RowSet pertencentes
	 * ao produto atual filtradas caso houver filtro para o componente grid da
	 * interface
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" path="visualizarProduto.jsp"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward acObterListaCategoriaProduto(CategoriaProdutoFormBean categoriaProdutoFormBean) throws Exception {
		this.produtoFormBean.setProdutoVO(this.jCSProduto.obterProduto(this.produtoFormBean.getProdutoVO()));

		this.sortFilterService = SortFilterService.getInstance(getRequest());
		this.listaCategoriaProduto = this.jCSCategoriaProduto.obterListaCategoriaProduto(
				this.produtoFormBean.getProdutoVO(), categoriaProdutoFormBean.getNomeCategoriaProdutoFiltro(),
				this.sortFilterService.getDatabaseFilter(this.gridListaCategoriaProduto));

		return new Forward("success");
	}

	/**
	 * Action que obtém a lista de categoriaProduto do tipo VO[] pertencentes ao
	 * produto atual filtradas caso houver filtro para o componente repeater da
	 * interface
	 * 
	 * @jpf:action
	 * @jpf:forward return-to="currentPage" name="success"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward acObterListaCategoriaProdutoVO(CategoriaProdutoFormBean categoriaProdutoFormBean)
			throws Exception {
		if (categoriaProdutoFormBean.getNomeCategoriaProdutoFiltro().trim().equals("")) {
			this.listaCategoriaProdutoVOFiltrada = this.listaCategoriaProdutoVO;
		} else {
			ArrayList listaCategoriaProdutoVODinamica = new ArrayList();

			for (int i = 0; i < this.listaCategoriaProdutoVO.length; i++) {
				if ((this.listaCategoriaProdutoVO[i].getNome_categoria_produto().toUpperCase()
						.indexOf(categoriaProdutoFormBean.getNomeCategoriaProdutoFiltro().trim().toUpperCase())) >= 0) {
					listaCategoriaProdutoVODinamica.add(this.listaCategoriaProdutoVO[i]);
				}
			}
			this.listaCategoriaProdutoVOFiltrada = listaCategoriaProdutoVODinamica.toArray();
		}

		return new Forward("success");
	}

	/**
	 * Action que obtem todos os dados de categoriaProduto para ir para a página
	 * alterarCategoriaProduto
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" path="alterarProduto.jsp"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward acIrParaAlterarProduto() throws Exception {

		String id_produto = SortFilterService.decodeUniqueIdentifier(getRequest(), this.gridListaProduto, "id_produto");

		if (id_produto != null) {
			this.produtoFormBean.setProdutoVO(new ProdutoVO());
			this.produtoFormBean.getProdutoVO().setId_produto(Long.parseLong(id_produto));
		}

		this.produtoFormBean.setProdutoVO(this.jCSProduto.obterProduto(this.produtoFormBean.getProdutoVO()));

		this.sortFilterService = SortFilterService.getInstance(getRequest());
		this.listaCategoriaProdutoVO = this.jCSCategoriaProduto
				.obterListaCategoriaProdutoPorProduto(this.produtoFormBean.getProdutoVO(), null);
		this.listaCategoriaProdutoVOFiltrada = this.listaCategoriaProdutoVO;

		return new Forward("success");
	}

	/**
	 * Action que obtem a lista de categorias para o popup vincular
	 * categoriaProduto
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" return-to="currentPage"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward acObterListaCategoriaProdutoPopup(CategoriaProdutoFormBean categoriaProdutoFormBean)
			throws Exception {

		this.sortFilterService = SortFilterService.getInstance(getRequest());
		this.listaCategoriaProduto = this.jCSCategoriaProduto.obterListaCategoriaProduto(null,
				categoriaProdutoFormBean.getNomeCategoriaProdutoFiltroPopup(),
				this.sortFilterService.getDatabaseFilter(this.gridListaCategoriaProduto));

		return new Forward("success");
	}

	/**
	 * Action que volta para página anterior
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" return-to="previousPage"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward acVoltarAPaginaAnterior() {
		return new Forward("success");
	}

	/**
	 * Action que desvincula temporariamente o VO da lista de categoriaProdutoVO
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" return-to="currentPage"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward acDesvincularCategoriaProduto() throws Exception {
		CategoriaProdutoVO[] listaCategoriaProdutoVO = new CategoriaProdutoVO[this.listaCategoriaProdutoVO.length - 1];
		int j = 0;
		for (int i = 0; i < this.listaCategoriaProdutoVO.length; i++) {
			if (this.categoriaProdutoFormBean.getCategoriaProdutoVO()
					.getId_categoria_produto() != this.listaCategoriaProdutoVO[i].getId_categoria_produto()) {
				listaCategoriaProdutoVO[j++] = this.listaCategoriaProdutoVO[i];
			}
		}
		this.listaCategoriaProdutoVO = listaCategoriaProdutoVO;
		this.listaCategoriaProdutoVOFiltrada = listaCategoriaProdutoVO;
		return new Forward("success");
	}

	/**
	 * Action que volta para o begin, para que o fluxo vá para a pagina
	 * consultarProduto
	 * 
	 * @jpf:action
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 * @jpf:forward name="success" path="begin.do"
	 */
	protected Forward acIrParaConsultarProduto() throws Exception {
		return new Forward("success");
	}

	/**
	 * Action que otém a lista de todas as categorias e abre o popup com esta
	 * lista para vincula-las ao produto atual
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" return-to="currentPage"
	 */
	protected Forward acAbrirPopupVincularCategoria() throws Exception {
		this.sortFilterService = SortFilterService.getInstance(getRequest());
		this.listaCategoriaProduto = this.jCSCategoriaProduto.obterListaCategoriaProduto(null, null,
				this.sortFilterService.getDatabaseFilter(this.gridListaCategoriaProduto));
		this.produtoFormBean.setDisplayPopup("block");
		return new Forward("success");
	}

	/**
	 * Action que verifica as condições das categorias em caso de sucesso
	 * vincula temporariamente o VO da categoria ao produto atual
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" return-to="currentPage"
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 */
	protected Forward acVinculaCategoriaProduto() throws Exception {
		long id_categoria_produto = Long.parseLong(SortFilterService.decodeUniqueIdentifier(getRequest(),
				this.gridListaCategoriaProduto, "id_categoria_produto"));

		boolean categoriaJaVinculada = false;
		for (int i = 0; i < this.listaCategoriaProdutoVO.length; i++) {
			if (id_categoria_produto == this.listaCategoriaProdutoVO[i].getId_categoria_produto()) {
				categoriaJaVinculada = true;
				this.produtoFormBean.setMensagem("Categoria já vinculada!");
				break;
			}
		}

		if (!categoriaJaVinculada) {
			CategoriaProdutoVO categoriaProdutoVO = new CategoriaProdutoVO();
			categoriaProdutoVO.setId_categoria_produto(id_categoria_produto);

			categoriaProdutoVO = this.jCSCategoriaProduto.obterCategoriaProduto(categoriaProdutoVO);

			CategoriaProdutoVO[] listaCategoriaProdutoVO = new CategoriaProdutoVO[this.listaCategoriaProdutoVO.length
					+ 1];
			for (int j = 0; j < this.listaCategoriaProdutoVO.length; j++) {
				listaCategoriaProdutoVO[j] = this.listaCategoriaProdutoVO[j];
			}
			listaCategoriaProdutoVO[this.listaCategoriaProdutoVO.length] = categoriaProdutoVO;

			this.listaCategoriaProdutoVO = listaCategoriaProdutoVO;
			this.listaCategoriaProdutoVOFiltrada = this.listaCategoriaProdutoVO;
			this.produtoFormBean.setDisplayPopup("none");
		}

		return new Forward("success");
	}

	/**
	 * Action que apaga a mensagem da interface, pois caso a mesagem seja nula,
	 * não será exibida na inicialização da página, alterar ou cadastrar
	 * categoriaProduto
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" return-to="currentPage"
	 */
	protected Forward acApagarMesagem() {
		this.produtoFormBean.setMensagem(null);
		return new Forward("success");
	}

	/**
	 * Action que seta o display do popUp para none, que no caso deixa-o
	 * invisível
	 * 
	 * @jpf:action
	 * @jpf:forward name="success" return-to="currentPage"
	 */
	protected Forward acFechaPopup() {
		this.produtoFormBean.setDisplayPopup("none");
		return new Forward("success");
	}

	/**
	 * Action que confirma as alterações do produto e torna-os persistentes
	 * 
	 * @jpf:action
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 * @jpf:forward name="success" path="acIrParaVisualizarProduto.do"
	 * @jpf:forward name="error" return-to="currentPage"
	 */
	protected Forward acAlterarProduto() throws Exception {
		if (!this.produtoFormBean.getProdutoVO().getNome_produto().trim().equals("")) {
			ProdutoVO produtoVO = this.produtoFormBean.getProdutoVO();
			ProdutoCategoriaProdutoVO[] listaProdutoCategoriaProdutoVO = new ProdutoCategoriaProdutoVO[this.listaCategoriaProdutoVO.length];
			for (int i = 0; i < this.listaCategoriaProdutoVO.length; i++) {
				listaProdutoCategoriaProdutoVO[i] = new ProdutoCategoriaProdutoVO();
				listaProdutoCategoriaProdutoVO[i].setId_produto(produtoVO.getId_produto());
				listaProdutoCategoriaProdutoVO[i]
						.setId_categoria_produto(this.listaCategoriaProdutoVO[i].getId_categoria_produto());
			}
			this.jCSProduto.atualizarProduto(produtoVO, listaProdutoCategoriaProdutoVO);

			return new Forward("success");
		} else {
			this.produtoFormBean.setMensagem("Insira o nome do produto");
			return new Forward("error");
		}
	}

	/**
	 * Action que nula as informações do formBean para ir para a página
	 * cadastrarProduto
	 * 
	 * @jpf:action
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 * @jpf:forward name="success" path="cadastrarProduto.jsp"
	 */
	protected Forward acIrParaCadastrarProduto() {
		this.produtoFormBean = new ProdutoFormBean();
		this.listaCategoriaProdutoVO = new CategoriaProdutoVO[0];
		this.listaCategoriaProdutoVOFiltrada = new CategoriaProdutoVO[0];
		return new Forward("success");
	}

	/**
	 * Action que confirma as alterarções do produto a ser cadastrado e torna o
	 * objeto persistente com a lista de categorias
	 * 
	 * @jpf:action
	 * @jpf:catch type="Exception" method="exceptionHandler"
	 * @jpf:forward name="success" path="acIrParaVisualizarProduto.do"
	 * @jpf:forward name="error" return-to="currentPage"
	 */
	protected Forward acCadastrarProduto() throws Exception {
		if (!this.produtoFormBean.getProdutoVO().getNome_produto().trim().equals("")) {
			ProdutoVO produtoVO = this.produtoFormBean.getProdutoVO();
			this.produtoFormBean
					.setProdutoVO(this.jCSProduto.cadastrarProduto(produtoVO, this.listaCategoriaProdutoVO));

			return new Forward("success");
		} else {
			this.produtoFormBean.setMensagem("Insira o nome do produto");
			return new Forward("error");
		}

	}
}