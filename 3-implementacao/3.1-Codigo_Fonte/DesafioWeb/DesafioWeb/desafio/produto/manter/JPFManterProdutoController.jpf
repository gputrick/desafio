package desafio.produto.manter;
import com.bea.wlw.netui.pageflow.FormData;
import com.bea.wlw.netui.pageflow.Forward;
import com.bea.wlw.netui.pageflow.PageFlowController;
import com.bea.wlw.netui.pageflow.PreviousPageInfo;
import com.bea.wlw.netui.tags.databinding.SortFilterService;
import com.bea.wlw.netui.tags.html.Exceptions;
import desafio.CategoriaProdutoVO;
import itaipu.util.exceptions.AppException;
import desafio.ProdutoVO;
import desafio.jcs.JCSCategoriaProduto;
import desafio.jcs.JCSProduto;
import desafio.jcs.JCSProdutoImpl;
import desafio.produto.ProdutoFormBean;
import java.math.BigDecimal;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.sql.RowSet;
import org.apache.struts.Globals;
import org.apache.struts.action.ActionForm;

/**
 * @jpf:controller nested="false"
 * @jpf:view-properties view-properties::
 * <!-- This data is auto-generated. Hand-editing this section is not recommended. -->
 * <view-properties>
 * <pageflow-object id="pageflow:/desafio/produto/manter/JPFManterProdutoController.jpf"/>
 * <pageflow-object id="action:acPaginacaoProduto.do">
 *   <property value="400" name="x"/>
 *   <property value="260" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acPaginacaoCategoriaProduto.do">
 *   <property value="340" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acObterListaProduto.do#desafio.produto.ProdutoFormBean">
 *   <property value="1160" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acEliminarProduto.do">
 *   <property value="1060" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acSelecionaProduto.do">
 *   <property value="560" name="x"/>
 *   <property value="260" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acIrParaVisualizarProduto.do">
 *   <property value="540" name="x"/>
 *   <property value="360" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:cadastrarProduto.do">
 *   <property value="980" name="x"/>
 *   <property value="260" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarProduto.jsp@#@action:acPaginacaoProduto.do@">
 *   <property value="1024,730,730,436" name="elbowsX"/>
 *   <property value="153,153,253,253" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarProduto.jsp@#@action:acEliminarProduto.do@">
 *   <property value="1060,1060,1060,1060" name="elbowsX"/>
 *   <property value="204,460,460,717" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarProduto.jsp@#@action:acSelecionaProduto.do@">
 *   <property value="1024,810,810,596" name="elbowsX"/>
 *   <property value="164,164,253,253" name="elbowsY"/>
 *   <property value="West_2" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarProduto.jsp@#@action:acObterListaProduto.do#desafio.produto.ProdutoFormBean@">
 *   <property value="1096,1110,1110,1124" name="elbowsX"/>
 *   <property value="153,153,842,842" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_0" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="page:consultarProduto.jsp">
 *   <property value="1060" name="x"/>
 *   <property value="160" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="page:../errorException.jsp">
 *   <property value="140" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="page:visualizarProduto.jsp">
 *   <property value="380" name="x"/>
 *   <property value="460" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:cancel.do">
 *   <property value="920" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarProduto.jsp@#@action:cancel.do@">
 *   <property value="900,900,884,884" name="elbowsX"/>
 *   <property value="804,814,814,853" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="page:cadastrarProduto.jsp">
 *   <property value="900" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="page:alterarProduto.jsp">
 *   <property value="580" name="x"/>
 *   <property value="660" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acPaginacaoProduto.do@@">
 *   <property value="400" name="x"/>
 *   <property value="360" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acPaginacaoProduto.do@">
 *   <property value="400,400,400,400" name="elbowsX"/>
 *   <property value="304,310,310,317" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acPaginacaoCategoriaProduto.do@@">
 *   <property value="340" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acPaginacaoCategoriaProduto.do@">
 *   <property value="340,340,340,340" name="elbowsX"/>
 *   <property value="804,810,810,817" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#acObterListaProduto.do#@action:acEliminarProduto.do@">
 *   <property value="1096,1110,1110,1124" name="elbowsX"/>
 *   <property value="753,753,853,853" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#acIrParaVisualizarProduto.do#@action:acSelecionaProduto.do@">
 *   <property value="560,560,540,540" name="elbowsX"/>
 *   <property value="304,310,310,317" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#visualizarProduto.jsp#@action:acIrParaVisualizarProduto.do@">
 *   <property value="504,460,460,416" name="elbowsX"/>
 *   <property value="353,353,442,442" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_0" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="control:desafio.jcs.JCSProduto#jCSProduto">
 *   <property value="440" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="control:desafio.jcs.JCSCategoriaProduto#jCSCategoriaProduto">
 *   <property value="560" name="x"/>
 *   <property value="860" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acSelecionaCategoriaProduto.do">
 *   <property value="120" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarProduto.jsp@#@action:acSelecionaCategoriaProduto.do@">
 *   <property value="344,250,250,156" name="elbowsX"/>
 *   <property value="453,453,753,753" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarProduto.jsp@#@action:acPaginacaoCategoriaProduto.do@">
 *   <property value="380,380,340,340" name="elbowsX"/>
 *   <property value="504,610,610,717" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarProduto.jsp@#@action:acEliminarProduto.do@">
 *   <property value="416,720,720,1024" name="elbowsX"/>
 *   <property value="453,453,753,753" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#consultarProduto.jsp#@action:acObterListaProduto.do#desafio.produto.ProdutoFormBean@">
 *   <property value="1124,1110,1110,1096" name="elbowsX"/>
 *   <property value="842,842,164,164" name="elbowsY"/>
 *   <property value="West_0" name="fromPort"/>
 *   <property value="East_2" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="action:acIrParaAlterarProduto.do">
 *   <property value="880" name="x"/>
 *   <property value="560" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarProduto.jsp@#@action:acIrParaAlterarProduto.do@">
 *   <property value="1024,970,970,916" name="elbowsX"/>
 *   <property value="164,164,553,553" name="elbowsY"/>
 *   <property value="West_2" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#alterarProduto.jsp#@action:acIrParaAlterarProduto.do@">
 *   <property value="844,730,730,616" name="elbowsX"/>
 *   <property value="553,553,653,653" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarProduto.jsp@#@action:acEliminarProduto.do@">
 *   <property value="616,820,820,1024" name="elbowsX"/>
 *   <property value="653,653,753,753" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarProduto.jsp@#@action:acSelecionaCategoriaProduto.do@">
 *   <property value="544,350,350,156" name="elbowsX"/>
 *   <property value="664,664,753,753" name="elbowsY"/>
 *   <property value="West_2" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarProduto.jsp@#@action:acPaginacaoCategoriaProduto.do@">
 *   <property value="544,460,460,376" name="elbowsX"/>
 *   <property value="653,653,753,753" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarProduto.jsp@#@action:cadastrarProduto.do@">
 *   <property value="1024,1020,1020,1016" name="elbowsX"/>
 *   <property value="164,164,253,253" name="elbowsY"/>
 *   <property value="West_2" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarProduto.jsp@#@action:acIrParaAlterarProduto.do@">
 *   <property value="416,630,630,844" name="elbowsX"/>
 *   <property value="453,453,553,553" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action:acDesvinculaCategoria.do">
 *   <property value="720" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarProduto.jsp@#@action:acDesvinculaCategoria.do@">
 *   <property value="616,650,650,684" name="elbowsX"/>
 *   <property value="664,664,753,753" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action:acVoltarAPaginaAnterior.do">
 *   <property value="540" name="x"/>
 *   <property value="760" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarProduto.jsp@#@action:acVoltarAPaginaAnterior.do@">
 *   <property value="580,580,540,540" name="elbowsX"/>
 *   <property value="704,710,710,717" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#previousPage#@action:acVoltarAPaginaAnterior.do@">
 *   <property value="576,600,600,624" name="elbowsX"/>
 *   <property value="753,753,873,873" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#previousPage#@action:acVoltarAPaginaAnterior.do@@">
 *   <property value="660" name="x"/>
 *   <property value="880" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:begin.do#desafio.produto.ProdutoFormBean">
 *   <property value="1060" name="x"/>
 *   <property value="60" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#consultarProduto.jsp#@action:begin.do#desafio.produto.ProdutoFormBean@">
 *   <property value="1060,1060,1060,1060" name="elbowsX"/>
 *   <property value="104,110,110,117" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * </view-properties>
 * ::
 */
public class JPFManterProdutoController extends PageFlowController
{
    /**
	* @common:control
	*/
    private JCSProduto jCSProduto;
    
    /**
	* @common:control
	*/
    private JCSCategoriaProduto jCSCategoriaProduto;
    
    public ProdutoFormBean produtoFormBean;
    
    public transient PreviousPageInfo currentPage;
	public transient SortFilterService sortFilterService;
	public transient SortFilterService sortFilterServiceObter;

    public transient RowSet listaProduto;
    public transient String gridListaProduto = "gridListaProduto";
    
    public transient RowSet listaCategoriaProduto;
    public transient String gridListaCategoriaProduto = "gridListaCategoriaProduto";
    
    public CategoriaProdutoVO[] listaCategoriaProdutoVO;
    // Uncomment this declaration to access Global.app.
    // 
    //     protected global.Global globalApp;
    // 

    // For an example of page flow exception handling see the example "catch" and "exception-handler"
    // annotations in {project}/WEB-INF/src/global/Global.app

    /**
     * This method represents the point of entry into the pageflow
     * @jpf:action
     * @jpf:forward name="success" path="consultarProduto.jsp"
     * @jpf:catch type="Exception" method="exceptionHandler"
     */
    protected Forward begin(ProdutoFormBean produtoFormBean) throws Exception
    {
        if(produtoFormBean == null){
            this.produtoFormBean = new ProdutoFormBean();
        }else{
            this.produtoFormBean = produtoFormBean;
        }
        
        this.sortFilterService = SortFilterService.getInstance(getRequest());
        this.listaProduto = this.jCSProduto.obterListaProduto(null, produtoFormBean.getNomeProdutoFiltro(), this.sortFilterService.getDatabaseFilter(this.gridListaProduto));       
        
        return new Forward("success", produtoFormBean);
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="currentPage"
     */
    protected Forward acPaginacaoProduto()
    {
        this.sortFilterService = SortFilterService.getInstance(getRequest()); 
                           
        return new Forward("success");
    }
    
      /**
     * @jpf:action
     * @jpf:forward name="success" return-to="currentPage"
     */
    protected Forward acPaginacaoCategoriaProduto()
    {
        this.sortFilterService = SortFilterService.getInstance(getRequest());
                            
        return new Forward("success");
    }

    /**
     * @jpf:action
     * @jpf:catch type="Exception" method="exceptionHandler"
     * @jpf:forward name="success" path="consultarProduto.jsp"
     */
    protected Forward acObterListaProduto(ProdutoFormBean produtoFormBean) throws Exception
    {
        this.sortFilterService = SortFilterService.getInstance(getRequest());
        this.listaProduto = this.jCSProduto.obterListaProduto(null, produtoFormBean.getNomeProdutoFiltro(), this.sortFilterService.getDatabaseFilter(this.gridListaProduto));       
        
        return new Forward("success");
            
    }
    
     /**
     * @jpf:action
     * @jpf:forward name="success" path="acObterListaProduto.do"
     * @jpf:catch type="Exception" method="exceptionHandler"
     */
    protected Forward acEliminarProduto() throws Exception
    {
        if (this.produtoFormBean.getProdutoVO().getId_produto() > 0) {
            this.jCSProduto.eliminarProduto(this.produtoFormBean.getProdutoVO());
        }	
		return new Forward("success");   
    }
    
    
    /**
    * @jpf:action
    * @jpf:forward name="success" path="acIrParaVisualizarProduto.do"
    * @jpf:catch type="Exception" method="exceptionHandler"
    */
      protected Forward acSelecionaProduto() throws Exception {      
            String id_produto = SortFilterService.decodeUniqueIdentifier(getRequest(), this.gridListaProduto, "id_produto");
            if(id_produto != null){
                this.produtoFormBean.setProdutoVO(new ProdutoVO());
                this.produtoFormBean.getProdutoVO().setId_produto(Long.parseLong(id_produto));
            }
            return new Forward("success");    
      }		
      
    /**
      * @jpf:exception-handler
      * @jpf:forward name="errorPage" path="../errorException.jsp"
      */
    protected Forward exceptionHandler(Exception ex, String actionName, String mesage, FormData form) {
    String displayMesage;
        if(AppException.isMensagemNegocio(ex)){
            String keyError = AppException.obtemKeyErro(ex);
            ResourceBundle msgs;
            msgs= ResourceBundle.getBundle("msgs", (Locale)this.getRequest().getSession().getAttribute(Globals.LOCALE_KEY));
            displayMesage = "Erro: " + actionName + " - " + msgs.getString("MSG_ERROR_"+ keyError);
            getRequest().setAttribute("errorMessage",displayMesage);
        }else{
            displayMesage = "Erro: " + actionName + " - " + ex.getMessage();
        }
        return new Forward( "errorPage" ); 
    }    

    /**
	* @jpf:action
    * @jpf:forward name="success" path="visualizarProduto.jsp"
    * @jpf:catch type="Exception"  method="exceptionHandler"
    */
    protected Forward acIrParaVisualizarProduto() throws Exception
    {
        this.produtoFormBean.setProdutoVO(this.jCSProduto.obterProduto(this.produtoFormBean.getProdutoVO()));
        
        this.sortFilterService = SortFilterService.getInstance(getRequest());
        this.listaCategoriaProduto = this.jCSCategoriaProduto.obterListaCategoriaProduto(this.produtoFormBean.getProdutoVO(), null, this.sortFilterService.getDatabaseFilter(this.gridListaCategoriaProduto));

        return new Forward("success");
    }

    /**
     * @jpf:action
     */
    protected Forward cadastrarProduto()
    {
        return new Forward("success");
    }

	
/**
  * @jpf:action
  * @jpf:forward name="success" path="alterarProduto.jsp"
  * @jpf:catch type="Exception" method="exceptionHandler"
  */
  protected Forward acIrParaAlterarProduto() throws Exception {  
    
        String id_produto = SortFilterService.decodeUniqueIdentifier(getRequest(), this.gridListaProduto, "id_produto");
        
        if(id_produto != null){
            this.produtoFormBean.setProdutoVO(new ProdutoVO());
            this.produtoFormBean.getProdutoVO().setId_produto(Long.parseLong(id_produto));
        }
        
        this.produtoFormBean.setProdutoVO(this.jCSProduto.obterProduto(this.produtoFormBean.getProdutoVO()));
        
        this.sortFilterService = SortFilterService.getInstance(getRequest());
        this.listaCategoriaProdutoVO = this.jCSCategoriaProduto.obterListaCategoriaProdutoPorProduto(this.produtoFormBean.getProdutoVO(), null);
        
		return new Forward("success");        
  } 

    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="previousPage"
     */
    protected Forward acVoltarAPaginaAnterior()
    {
        return new Forward("success");
    }
}