package desafio.produto.manter;
import com.bea.wlw.netui.pageflow.FormData;
import com.bea.wlw.netui.pageflow.Forward;
import com.bea.wlw.netui.pageflow.PageFlowController;
import com.bea.wlw.netui.pageflow.PreviousPageInfo;
import com.bea.wlw.netui.tags.databinding.SortFilterService;
import com.bea.wlw.netui.tags.html.Exceptions;
import itaipu.util.exceptions.AppException;
import desafio.ProdutoVO;
import desafio.jcs.JCSProduto;
import desafio.jcs.JCSProdutoImpl;
import desafio.produto.ProdutoFormBean;
import java.math.BigDecimal;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.sql.RowSet;
import org.apache.struts.Globals;
import org.apache.struts.action.ActionForm;

/**
 * @jpf:controller nested="false"
 * @jpf:view-properties view-properties::
 * <!-- This data is auto-generated. Hand-editing this section is not recommended. -->
 * <view-properties>
 * <pageflow-object id="pageflow:/desafio/produto/manter/JPFManterProdutoController.jpf"/>
 * <pageflow-object id="action:begin.do#desafio.produto.ProdutoFormBean">
 *   <property value="860" name="x"/>
 *   <property value="60" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:cadastrarProduto.do">
 *   <property value="80" name="x"/>
 *   <property value="260" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:alterarProduto.do">
 *   <property value="720" name="x"/>
 *   <property value="260" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:cancel.do">
 *   <property value="380" name="x"/>
 *   <property value="460" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:obterListaProduto.do">
 *   <property value="500" name="x"/>
 *   <property value="460" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acPaginacaoProduto.do">
 *   <property value="400" name="x"/>
 *   <property value="260" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acObterListaProduto.do#desafio.produto.ProdutoFormBean">
 *   <property value="860" name="x"/>
 *   <property value="260" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acEliminarProduto.do">
 *   <property value="800" name="x"/>
 *   <property value="180" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acIrParaAtualizarProduto.do">
 *   <property value="160" name="x"/>
 *   <property value="560" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acIrParaVisualizarProduto.do">
 *   <property value="180" name="x"/>
 *   <property value="180" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acIrParaAlterarProduto.do">
 *   <property value="430" name="x"/>
 *   <property value="530" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:acSelecionaProduto.do">
 *   <property value="90" name="x"/>
 *   <property value="70" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarProduto.jsp@#@action:acPaginacaoProduto.do@">
 *   <property value="380,380,400,400" name="elbowsX"/>
 *   <property value="204,210,210,217" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarProduto.jsp@#@action:acIrParaAlterarProduto.do@">
 *   <property value="416,430,430,430" name="elbowsX"/>
 *   <property value="164,164,325,487" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarProduto.jsp@#@action:acEliminarProduto.do@">
 *   <property value="416,590,590,764" name="elbowsX"/>
 *   <property value="142,142,173,173" name="elbowsY"/>
 *   <property value="East_0" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarProduto.jsp@#@action:cadastrarProduto.do@">
 *   <property value="344,230,230,116" name="elbowsX"/>
 *   <property value="153,153,253,253" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarProduto.jsp@#@action:acSelecionaProduto.do@">
 *   <property value="344,235,235,126" name="elbowsX"/>
 *   <property value="142,142,63,63" name="elbowsY"/>
 *   <property value="West_0" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:consultarProduto.jsp@#@action:acObterListaProduto.do#desafio.produto.ProdutoFormBean@">
 *   <property value="416,620,620,824" name="elbowsX"/>
 *   <property value="153,153,253,253" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="page:consultarProduto.jsp">
 *   <property value="380" name="x"/>
 *   <property value="160" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:cadastrarProduto.jsp@#@action:cancel.do@">
 *   <property value="136,240,240,344" name="elbowsX"/>
 *   <property value="353,353,453,453" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="page:cadastrarProduto.jsp">
 *   <property value="100" name="x"/>
 *   <property value="360" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:alterarProduto.jsp@#@action:cancel.do@">
 *   <property value="684,550,550,416" name="elbowsX"/>
 *   <property value="353,353,453,453" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="page:alterarProduto.jsp">
 *   <property value="720" name="x"/>
 *   <property value="360" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="page:../errorException.jsp">
 *   <property value="640" name="x"/>
 *   <property value="560" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="page:visualizarProduto.jsp">
 *   <property value="580" name="x"/>
 *   <property value="80" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#cadastrarProduto.jsp#@action:cadastrarProduto.do@">
 *   <property value="80,80,100,100" name="elbowsX"/>
 *   <property value="304,310,310,317" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#alterarProduto.jsp#@action:alterarProduto.do@">
 *   <property value="720,720,720,720" name="elbowsX"/>
 *   <property value="304,310,310,317" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#previousPage#@action:cancel.do@@">
 *   <property value="280" name="x"/>
 *   <property value="260" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#previousPage#@action:cancel.do@">
 *   <property value="380,380,380,380" name="elbowsX"/>
 *   <property value="504,510,510,517" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:obterListaProduto.do@@">
 *   <property value="500" name="x"/>
 *   <property value="560" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:obterListaProduto.do@">
 *   <property value="500,500,500,500" name="elbowsX"/>
 *   <property value="504,510,510,517" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acPaginacaoProduto.do@@">
 *   <property value="420" name="x"/>
 *   <property value="360" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acPaginacaoProduto.do@">
 *   <property value="400,400,420,420" name="elbowsX"/>
 *   <property value="304,310,310,317" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#success#currentPage#@action:acObterListaProduto.do#desafio.produto.ProdutoFormBean@@">
 *   <property value="860" name="x"/>
 *   <property value="360" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#success#currentPage#@action:acObterListaProduto.do#desafio.produto.ProdutoFormBean@">
 *   <property value="860,860,860,860" name="elbowsX"/>
 *   <property value="304,310,310,317" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#acObterListaProduto.do#@action:acEliminarProduto.do@">
 *   <property value="800,800,812,824" name="elbowsX"/>
 *   <property value="224,242,242,242" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="West_0" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#visualizarProduto.jsp#@action:acIrParaVisualizarProduto.do@">
 *   <property value="216,380,380,544" name="elbowsX"/>
 *   <property value="173,173,73,73" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="control:desafio.jcs.JCSProduto#jCSProduto">
 *   <property value="780" name="x"/>
 *   <property value="560" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#consultarProduto.jsp#@action:begin.do#desafio.produto.ProdutoFormBean@">
 *   <property value="360,360,380,380" name="elbowsX"/>
 *   <property value="104,110,110,117" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:visualizarProduto.jsp@#@action:alterarProduto.do@">
 *   <property value="616,650,650,684" name="elbowsX"/>
 *   <property value="73,73,253,253" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action:acJSPObterLista.do">
 *   <property value="60" name="x"/>
 *   <property value="40" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#acEliminarLocal#acEliminarProduto.do#@action:acJSPObterLista.do@">
 *   <property value="96,430,430,764" name="elbowsX"/>
 *   <property value="33,33,173,173" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="acEliminarLocal" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#acIrParaVisualizarProduto.do#@action:acSelecionaProduto.do@">
 *   <property value="90,90,117,144" name="elbowsX"/>
 *   <property value="114,173,173,173" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * </view-properties>
 * ::
 */
public class JPFManterProdutoController extends PageFlowController
{
    /**
	* @common:control
	*/
    private JCSProduto jCSProduto;
    
    public ProdutoFormBean produtoFormBean;
    
    public transient PreviousPageInfo currentPage;
	public transient SortFilterService sortFilterService;
	public transient SortFilterService sortFilterServiceObter;
    
    public transient RowSet listaProduto;
    public transient String gridListaProduto = "gridListaProduto";
    public String actionJSP; 
    // Uncomment this declaration to access Global.app.
    // 
    //     protected global.Global globalApp;
    // 

    // For an example of page flow exception handling see the example "catch" and "exception-handler"
    // annotations in {project}/WEB-INF/src/global/Global.app

    /**
     * This method represents the point of entry into the pageflow
     * @jpf:action
     * @jpf:forward name="success" path="consultarProduto.jsp"
     * @jpf:catch type="Exception" method="exceptionHandler"
     */
    protected Forward begin(ProdutoFormBean produtoFormBean) throws Exception
    {
        if(produtoFormBean == null){
            this.produtoFormBean = new ProdutoFormBean();
        }else{
            this.produtoFormBean = produtoFormBean;
        }
        
        this.sortFilterService = SortFilterService.getInstance(getRequest());
        this.listaProduto = this.jCSProduto.obterListaProduto(produtoFormBean.getNomeProdutoFiltro(), this.sortFilterService.getDatabaseFilter(this.gridListaProduto));       
        
        return new Forward("success", produtoFormBean);
    }
    
    /**
     * @jpf:action
     * @jpf:forward name="success" path="cadastrarProduto.jsp"
     */
    protected Forward cadastrarProduto()
    {
        return new Forward("success");
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" path="alterarProduto.jsp"
     */
    protected Forward alterarProduto()
    {
        return new Forward("success");
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="previousPage"
     */
    protected Forward cancel()
    {
        return new Forward("success");
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="currentPage"
     */
    protected Forward obterListaProduto() throws Exception
    {
        
        return new Forward("success");
    }


    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="currentPage"
     */
    protected Forward acPaginacaoProduto()
    {
        this.sortFilterService = SortFilterService.getInstance(getRequest());                    
        return new Forward("success");
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" return-to="currentPage"
     * @jpf:catch type="Exception" method="exceptionHandler"
     */
    protected Forward acObterListaProduto(ProdutoFormBean produtoFormBean) throws Exception
    {
        this.sortFilterService = SortFilterService.getInstance(getRequest());
        this.listaProduto = this.jCSProduto.obterListaProduto(produtoFormBean.getNomeProdutoFiltro(), this.sortFilterService.getDatabaseFilter(this.gridListaProduto));       
        
        return new Forward("success");
            
    }
    
     /**
     * @jpf:action
     * @jpf:forward name="success" path="acObterListaProduto.do"
     * @jpf:catch type="Exception" method="exceptionHandler"
     */
    protected Forward acEliminarProduto() throws Exception
    {
        if (this.produtoFormBean.getProdutoVO().getId_produto() > 0) {
            this.jCSProduto.eliminarProduto(this.produtoFormBean.getProdutoVO());
        }	
		return new Forward("success");   
    }
    
    	/**
      * @jpf:action
      * @jpf:forward name="acEliminarLocal" path="acEliminarProduto.do"
      * @jpf:catch type="Exception" method="exceptionHandler"
      */
      protected Forward acJSPObterLista() throws Exception {
        return this.getActionJSPForward();
      }
      
      	/**
        * @jpf:action
        * @jpf:forward name="success" path="acIrParaVisualizarProduto.do"
        * @jpf:catch type="Exception" method="exceptionHandler"
        */
  protected Forward acSelecionaProduto() throws Exception {      
		String id_produto = SortFilterService.decodeUniqueIdentifier(getRequest(), this.gridListaProduto, "id_produto");
		this.produtoFormBean.setProdutoVO(new ProdutoVO());		
		this.produtoFormBean.getProdutoVO().setId_produto(Long.parseLong(id_produto));
		return new Forward("success");    
  }		
      
        // retorna Forward contendo a proxima a��o
      private Forward getActionJSPForward(){
        // salva valor atual
        String ac = this.actionJSP;
        // seta default
        this.actionJSP = "success";
        // retorna com valor salvo
        return new Forward(ac);
      }
/**
  * @jpf:exception-handler
  * @jpf:forward name="errorPage" path="../errorException.jsp"
  */
  protected Forward exceptionHandler(Exception ex, String actionName, String mesage, FormData form) {
    String displayMesage;
    if(AppException.isMensagemNegocio(ex)){
      String keyError = AppException.obtemKeyErro(ex);
      ResourceBundle msgs;
      msgs= ResourceBundle.getBundle("msgs", (Locale)this.getRequest().getSession().getAttribute(Globals.LOCALE_KEY));
      displayMesage = "Erro: " + actionName + " - " + msgs.getString("MSG_ERROR_"+ keyError);
      getRequest().setAttribute("errorMessage",displayMesage);
    }    
    else{
      displayMesage = "Erro: " + actionName + " - " + ex.getMessage();
    }
    return new Forward( "errorPage" ); 
  }    

    /**
     * @jpf:action
     */
    protected Forward acIrParaAtualizarProduto()
    {
        return new Forward("success");
    }

    /**
	* @jpf:action
    * @jpf:forward name="success" path="visualizarProduto.jsp"
    * @jpf:catch type="Exception"  method="exceptionHandler"
    */
    protected Forward acIrParaVisualizarProduto() throws Exception
    {
        ProdutoVO produtoVO = this.produtoFormBean.getProdutoVO();
        produtoVO = this.jCSProduto.obterProduto(produtoVO);
        this.produtoFormBean.setProdutoVO(produtoVO);
        return new Forward("success");
    }
}